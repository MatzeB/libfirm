ir_node *ia32_autotransform(ir_node *node, int *rule)
{
	dbg_info *dbgi     = get_irn_dbg_info(node);
	ir_node  *block    = be_transform_node(get_nodes_block(node));
	ir_node  *new_node = NULL;
	*rule = -1;

	ir_node *var0 = NULL;
	ir_node *var1 = NULL;
	ir_node *var2 = NULL;
	ir_node *var3 = NULL;
	x86_imm32_t tmp_imm;
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_u[5](add32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Add(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 0;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_u[5](add32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Add(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[5](add32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Add(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 2;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_u[5](add32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Add(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 10;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_u[5](add32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Add(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 11;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[5](add32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Add(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 12;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_u[5](sub32(VAR_0, VAR_1), const32[2147483648])))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(2147483648, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 20;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_u[5](sub32(VAR_0, VAR_1), const32[2147483648])))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(2147483648, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 21;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[5](sub32(VAR_0, VAR_1), const32[2147483648]))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(node, 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 1)), new_tarval_from_long(2147483648, get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 22;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_u[5](sub32(VAR_0, VAR_1), const32[2147483648])))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(2147483648, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 30;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_u[5](sub32(VAR_0, VAR_1), const32[2147483648])))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(2147483648, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 31;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[5](sub32(VAR_0, VAR_1), const32[2147483648]))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(node, 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 1)), new_tarval_from_long(2147483648, get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 32;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_u[5](sub32(VAR_0, VAR_1), const32[2147483648])))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(2147483648, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 40;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_u[5](sub32(VAR_0, VAR_1), const32[2147483648])))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(2147483648, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 41;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[5](sub32(VAR_0, VAR_1), const32[2147483648]))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(node, 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 1)), new_tarval_from_long(2147483648, get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 42;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_u[5](sub32(VAR_0, VAR_1), const32[2147483648])))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(2147483648, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 50;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_u[5](sub32(VAR_0, VAR_1), const32[2147483648])))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(2147483648, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 51;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[5](sub32(VAR_0, VAR_1), const32[2147483648]))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(node, 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 1)), new_tarval_from_long(2147483648, get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 52;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_u[5](const32[2147483647], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(2147483647, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 60;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_u[5](const32[2147483647], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(2147483647, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 61;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[5](const32[2147483647], sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Const(get_irn_n(get_irn_n(node, 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 0)), new_tarval_from_long(2147483647, get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 62;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_u[5](const32[2147483647], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(2147483647, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 70;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_u[5](const32[2147483647], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(2147483647, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 71;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[5](const32[2147483647], sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Const(get_irn_n(get_irn_n(node, 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 0)), new_tarval_from_long(2147483647, get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 72;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_u[5](const32[2147483647], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(2147483647, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 80;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_u[5](const32[2147483647], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(2147483647, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 81;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[5](const32[2147483647], sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Const(get_irn_n(get_irn_n(node, 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 0)), new_tarval_from_long(2147483647, get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 82;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_u[5](const32[2147483647], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(2147483647, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 90;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_u[5](const32[2147483647], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(2147483647, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 91;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[5](const32[2147483647], sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Const(get_irn_n(get_irn_n(node, 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 0)), new_tarval_from_long(2147483647, get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 92;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_u[5](not32(sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 100;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_u[5](not32(sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 101;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[5](not32(sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Not(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 102;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_u[5](not32(sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 110;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_u[5](not32(sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 111;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[5](not32(sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Not(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 112;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_u[5](sub32(VAR_0, VAR_1), not32(sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 120;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_u[5](sub32(VAR_0, VAR_1), not32(sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 121;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[5](sub32(VAR_0, VAR_1), not32(sub32(VAR_0, VAR_1))))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Not(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 122;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_u[5](sub32(VAR_0, VAR_1), not32(sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 130;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_u[5](sub32(VAR_0, VAR_1), not32(sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 131;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[5](sub32(VAR_0, VAR_1), not32(sub32(VAR_0, VAR_1))))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Not(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 132;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[7](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_u[5](VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 140;
		goto done;
	}
	// compound-ia_jcc[7](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_u[5](VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 141;
		goto done;
	}
	// compound-ia_jcc[7](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[5](VAR_1, VAR_0))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 0))) || var1 == get_irn_n(get_irn_n(node, 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 1))) || var0 == get_irn_n(get_irn_n(node, 0), 1))) {
		ir_node *f21_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f22_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f23_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f21_node, f22_node, false); set_ia32_ls_mode(f23_node, mode_Is);
ir_node *f24_node = new_bd_ia32_Jcc(dbgi, block, f23_node, 7);
new_node = f24_node;

		*rule = 142;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[6](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_u[5](VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 150;
		goto done;
	}
	// compound-ia_jcc[6](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_u[5](VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 151;
		goto done;
	}
	// compound-ia_jcc[6](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[5](VAR_1, VAR_0))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 0))) || var1 == get_irn_n(get_irn_n(node, 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 1))) || var0 == get_irn_n(get_irn_n(node, 0), 1))) {
		ir_node *f17_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f18_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f19_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f17_node, f18_node, false); set_ia32_ls_mode(f19_node, mode_Is);
ir_node *f20_node = new_bd_ia32_Jcc(dbgi, block, f19_node, 6);
new_node = f20_node;

		*rule = 152;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[3](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_u[5](VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 160;
		goto done;
	}
	// compound-ia_jcc[3](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_u[5](VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 161;
		goto done;
	}
	// compound-ia_jcc[3](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[5](VAR_0, VAR_1))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 1))) || var1 == get_irn_n(get_irn_n(node, 0), 1))) {
		ir_node *f5_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f6_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f7_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f5_node, f6_node, false); set_ia32_ls_mode(f7_node, mode_Is);
ir_node *f8_node = new_bd_ia32_Jcc(dbgi, block, f7_node, 3);
new_node = f8_node;

		*rule = 162;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[2](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_u[5](VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 170;
		goto done;
	}
	// compound-ia_jcc[2](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_u[5](VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 171;
		goto done;
	}
	// compound-ia_jcc[2](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[5](VAR_0, VAR_1))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 1))) || var1 == get_irn_n(get_irn_n(node, 0), 1))) {
		ir_node *f1_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f2_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f3_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f1_node, f2_node, false); set_ia32_ls_mode(f3_node, mode_Is);
ir_node *f4_node = new_bd_ia32_Jcc(dbgi, block, f3_node, 2);
new_node = f4_node;

		*rule = 172;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_u[3](sub32(VAR_0, VAR_1), add32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Add(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 180;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_u[3](sub32(VAR_0, VAR_1), add32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Add(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 181;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[3](sub32(VAR_0, VAR_1), add32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Add(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 182;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_u[3](sub32(VAR_0, VAR_1), add32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Add(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 190;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_u[3](sub32(VAR_0, VAR_1), add32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Add(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 191;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[3](sub32(VAR_0, VAR_1), add32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Add(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 192;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_u[3](sub32(VAR_0, VAR_1), const32[2147483647])))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(2147483647, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 200;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_u[3](sub32(VAR_0, VAR_1), const32[2147483647])))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(2147483647, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 201;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[3](sub32(VAR_0, VAR_1), const32[2147483647]))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(node, 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 1)), new_tarval_from_long(2147483647, get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 202;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_u[3](sub32(VAR_0, VAR_1), const32[2147483647])))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(2147483647, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 210;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_u[3](sub32(VAR_0, VAR_1), const32[2147483647])))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(2147483647, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 211;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[3](sub32(VAR_0, VAR_1), const32[2147483647]))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(node, 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 1)), new_tarval_from_long(2147483647, get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 212;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_u[3](sub32(VAR_0, VAR_1), const32[2147483647])))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(2147483647, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 220;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_u[3](sub32(VAR_0, VAR_1), const32[2147483647])))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(2147483647, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 221;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[3](sub32(VAR_0, VAR_1), const32[2147483647]))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(node, 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 1)), new_tarval_from_long(2147483647, get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 222;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_u[3](sub32(VAR_0, VAR_1), const32[2147483647])))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(2147483647, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 230;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_u[3](sub32(VAR_0, VAR_1), const32[2147483647])))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(2147483647, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 231;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[3](sub32(VAR_0, VAR_1), const32[2147483647]))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(node, 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 1)), new_tarval_from_long(2147483647, get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 232;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_u[3](const32[2147483648], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(2147483648, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 240;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_u[3](const32[2147483648], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(2147483648, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 241;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[3](const32[2147483648], sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Const(get_irn_n(get_irn_n(node, 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 0)), new_tarval_from_long(2147483648, get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 242;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_u[3](const32[2147483648], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(2147483648, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 250;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_u[3](const32[2147483648], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(2147483648, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 251;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[3](const32[2147483648], sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Const(get_irn_n(get_irn_n(node, 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 0)), new_tarval_from_long(2147483648, get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 252;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_u[3](const32[2147483648], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(2147483648, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 260;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_u[3](const32[2147483648], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(2147483648, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 261;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[3](const32[2147483648], sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Const(get_irn_n(get_irn_n(node, 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 0)), new_tarval_from_long(2147483648, get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 262;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_u[3](const32[2147483648], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(2147483648, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 270;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_u[3](const32[2147483648], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(2147483648, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 271;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[3](const32[2147483648], sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Const(get_irn_n(get_irn_n(node, 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 0)), new_tarval_from_long(2147483648, get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 272;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_u[3](not32(sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 280;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_u[3](not32(sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 281;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[3](not32(sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Not(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 282;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_u[3](not32(sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 290;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_u[3](not32(sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 291;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[3](not32(sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Not(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 292;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_u[3](sub32(VAR_0, VAR_1), not32(sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 300;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_u[3](sub32(VAR_0, VAR_1), not32(sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 301;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[3](sub32(VAR_0, VAR_1), not32(sub32(VAR_0, VAR_1))))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Not(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 302;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_u[3](sub32(VAR_0, VAR_1), not32(sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 310;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_u[3](sub32(VAR_0, VAR_1), not32(sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 311;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[3](sub32(VAR_0, VAR_1), not32(sub32(VAR_0, VAR_1))))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Not(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 312;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[7](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_u[3](VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 320;
		goto done;
	}
	// compound-ia_jcc[7](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_u[3](VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 321;
		goto done;
	}
	// compound-ia_jcc[7](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[3](VAR_0, VAR_1))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 1))) || var1 == get_irn_n(get_irn_n(node, 0), 1))) {
		ir_node *f21_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f22_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f23_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f21_node, f22_node, false); set_ia32_ls_mode(f23_node, mode_Is);
ir_node *f24_node = new_bd_ia32_Jcc(dbgi, block, f23_node, 7);
new_node = f24_node;

		*rule = 322;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[6](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_u[3](VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 330;
		goto done;
	}
	// compound-ia_jcc[6](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_u[3](VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 331;
		goto done;
	}
	// compound-ia_jcc[6](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[3](VAR_0, VAR_1))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 1))) || var1 == get_irn_n(get_irn_n(node, 0), 1))) {
		ir_node *f17_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f18_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f19_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f17_node, f18_node, false); set_ia32_ls_mode(f19_node, mode_Is);
ir_node *f20_node = new_bd_ia32_Jcc(dbgi, block, f19_node, 6);
new_node = f20_node;

		*rule = 332;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[3](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_u[3](VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 340;
		goto done;
	}
	// compound-ia_jcc[3](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_u[3](VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 341;
		goto done;
	}
	// compound-ia_jcc[3](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[3](VAR_1, VAR_0))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 0))) || var1 == get_irn_n(get_irn_n(node, 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 1))) || var0 == get_irn_n(get_irn_n(node, 0), 1))) {
		ir_node *f5_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f6_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f7_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f5_node, f6_node, false); set_ia32_ls_mode(f7_node, mode_Is);
ir_node *f8_node = new_bd_ia32_Jcc(dbgi, block, f7_node, 3);
new_node = f8_node;

		*rule = 342;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[2](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_u[3](VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 350;
		goto done;
	}
	// compound-ia_jcc[2](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_u[3](VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 351;
		goto done;
	}
	// compound-ia_jcc[2](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[3](VAR_1, VAR_0))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 0))) || var1 == get_irn_n(get_irn_n(node, 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 1))) || var0 == get_irn_n(get_irn_n(node, 0), 1))) {
		ir_node *f1_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f2_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f3_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f1_node, f2_node, false); set_ia32_ls_mode(f3_node, mode_Is);
ir_node *f4_node = new_bd_ia32_Jcc(dbgi, block, f3_node, 2);
new_node = f4_node;

		*rule = 352;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_u[4](sub32(VAR_0, VAR_1), add32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Add(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 360;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_u[4](sub32(VAR_0, VAR_1), add32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Add(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 361;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[4](sub32(VAR_0, VAR_1), add32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Add(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 362;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_u[4](sub32(VAR_0, VAR_1), add32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Add(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 370;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_u[4](sub32(VAR_0, VAR_1), add32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Add(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 371;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[4](sub32(VAR_0, VAR_1), add32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Add(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 372;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_u[4](sub32(VAR_0, VAR_1), const32[2147483647])))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(2147483647, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 380;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_u[4](sub32(VAR_0, VAR_1), const32[2147483647])))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(2147483647, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 381;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[4](sub32(VAR_0, VAR_1), const32[2147483647]))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(node, 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 1)), new_tarval_from_long(2147483647, get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 382;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_u[4](sub32(VAR_0, VAR_1), const32[2147483647])))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(2147483647, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 390;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_u[4](sub32(VAR_0, VAR_1), const32[2147483647])))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(2147483647, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 391;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[4](sub32(VAR_0, VAR_1), const32[2147483647]))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(node, 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 1)), new_tarval_from_long(2147483647, get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 392;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_u[4](sub32(VAR_0, VAR_1), const32[2147483647])))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(2147483647, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 400;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_u[4](sub32(VAR_0, VAR_1), const32[2147483647])))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(2147483647, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 401;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[4](sub32(VAR_0, VAR_1), const32[2147483647]))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(node, 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 1)), new_tarval_from_long(2147483647, get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 402;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_u[4](sub32(VAR_0, VAR_1), const32[2147483647])))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(2147483647, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 410;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_u[4](sub32(VAR_0, VAR_1), const32[2147483647])))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(2147483647, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 411;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[4](sub32(VAR_0, VAR_1), const32[2147483647]))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(node, 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 1)), new_tarval_from_long(2147483647, get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 412;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_u[4](const32[2147483648], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(2147483648, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 420;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_u[4](const32[2147483648], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(2147483648, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 421;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[4](const32[2147483648], sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Const(get_irn_n(get_irn_n(node, 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 0)), new_tarval_from_long(2147483648, get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 422;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_u[4](const32[2147483648], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(2147483648, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 430;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_u[4](const32[2147483648], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(2147483648, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 431;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[4](const32[2147483648], sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Const(get_irn_n(get_irn_n(node, 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 0)), new_tarval_from_long(2147483648, get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 432;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_u[4](const32[2147483648], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(2147483648, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 440;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_u[4](const32[2147483648], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(2147483648, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 441;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[4](const32[2147483648], sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Const(get_irn_n(get_irn_n(node, 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 0)), new_tarval_from_long(2147483648, get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 442;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_u[4](const32[2147483648], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(2147483648, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 450;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_u[4](const32[2147483648], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(2147483648, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 451;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[4](const32[2147483648], sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Const(get_irn_n(get_irn_n(node, 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 0)), new_tarval_from_long(2147483648, get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 452;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_u[4](sub32(VAR_0, VAR_1), not32(sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 460;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_u[4](sub32(VAR_0, VAR_1), not32(sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 461;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[4](sub32(VAR_0, VAR_1), not32(sub32(VAR_0, VAR_1))))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Not(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 462;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_u[4](sub32(VAR_0, VAR_1), not32(sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 470;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_u[4](sub32(VAR_0, VAR_1), not32(sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 471;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[4](sub32(VAR_0, VAR_1), not32(sub32(VAR_0, VAR_1))))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Not(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 472;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_u[4](not32(sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 480;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_u[4](not32(sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 481;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[4](not32(sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Not(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 482;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_u[4](not32(sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 490;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_u[4](not32(sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 491;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[4](not32(sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Not(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 492;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[7](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_u[4](VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 500;
		goto done;
	}
	// compound-ia_jcc[7](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_u[4](VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 501;
		goto done;
	}
	// compound-ia_jcc[7](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[4](VAR_0, VAR_1))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 1))) || var1 == get_irn_n(get_irn_n(node, 0), 1))) {
		ir_node *f21_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f22_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f23_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f21_node, f22_node, false); set_ia32_ls_mode(f23_node, mode_Is);
ir_node *f24_node = new_bd_ia32_Jcc(dbgi, block, f23_node, 7);
new_node = f24_node;

		*rule = 502;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[6](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_u[4](VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 510;
		goto done;
	}
	// compound-ia_jcc[6](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_u[4](VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 511;
		goto done;
	}
	// compound-ia_jcc[6](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[4](VAR_0, VAR_1))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 1))) || var1 == get_irn_n(get_irn_n(node, 0), 1))) {
		ir_node *f17_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f18_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f19_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f17_node, f18_node, false); set_ia32_ls_mode(f19_node, mode_Is);
ir_node *f20_node = new_bd_ia32_Jcc(dbgi, block, f19_node, 6);
new_node = f20_node;

		*rule = 512;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[3](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_u[4](VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 520;
		goto done;
	}
	// compound-ia_jcc[3](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_u[4](VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 521;
		goto done;
	}
	// compound-ia_jcc[3](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[4](VAR_1, VAR_0))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 0))) || var1 == get_irn_n(get_irn_n(node, 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 1))) || var0 == get_irn_n(get_irn_n(node, 0), 1))) {
		ir_node *f5_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f6_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f7_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f5_node, f6_node, false); set_ia32_ls_mode(f7_node, mode_Is);
ir_node *f8_node = new_bd_ia32_Jcc(dbgi, block, f7_node, 3);
new_node = f8_node;

		*rule = 522;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[2](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_u[4](VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 530;
		goto done;
	}
	// compound-ia_jcc[2](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_u[4](VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 531;
		goto done;
	}
	// compound-ia_jcc[2](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[4](VAR_1, VAR_0))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 0))) || var1 == get_irn_n(get_irn_n(node, 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 1))) || var0 == get_irn_n(get_irn_n(node, 0), 1))) {
		ir_node *f1_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f2_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f3_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f1_node, f2_node, false); set_ia32_ls_mode(f3_node, mode_Is);
ir_node *f4_node = new_bd_ia32_Jcc(dbgi, block, f3_node, 2);
new_node = f4_node;

		*rule = 532;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_u[2](add32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Add(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 540;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_u[2](add32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Add(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 541;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[2](add32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Add(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 542;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_u[2](add32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Add(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 550;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_u[2](add32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Add(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 551;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[2](add32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Add(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 552;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_u[2](sub32(VAR_0, VAR_1), const32[2147483648])))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(2147483648, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 560;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_u[2](sub32(VAR_0, VAR_1), const32[2147483648])))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(2147483648, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 561;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[2](sub32(VAR_0, VAR_1), const32[2147483648]))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(node, 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 1)), new_tarval_from_long(2147483648, get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 562;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_u[2](sub32(VAR_0, VAR_1), const32[2147483648])))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(2147483648, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 570;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_u[2](sub32(VAR_0, VAR_1), const32[2147483648])))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(2147483648, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 571;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[2](sub32(VAR_0, VAR_1), const32[2147483648]))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(node, 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 1)), new_tarval_from_long(2147483648, get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 572;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_u[2](sub32(VAR_0, VAR_1), const32[2147483648])))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(2147483648, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 580;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_u[2](sub32(VAR_0, VAR_1), const32[2147483648])))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(2147483648, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 581;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[2](sub32(VAR_0, VAR_1), const32[2147483648]))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(node, 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 1)), new_tarval_from_long(2147483648, get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 582;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_u[2](sub32(VAR_0, VAR_1), const32[2147483648])))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(2147483648, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 590;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_u[2](sub32(VAR_0, VAR_1), const32[2147483648])))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(2147483648, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 591;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[2](sub32(VAR_0, VAR_1), const32[2147483648]))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(node, 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 1)), new_tarval_from_long(2147483648, get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 592;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_u[2](const32[2147483647], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(2147483647, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 600;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_u[2](const32[2147483647], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(2147483647, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 601;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[2](const32[2147483647], sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Const(get_irn_n(get_irn_n(node, 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 0)), new_tarval_from_long(2147483647, get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 602;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_u[2](const32[2147483647], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(2147483647, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 610;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_u[2](const32[2147483647], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(2147483647, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 611;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[2](const32[2147483647], sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Const(get_irn_n(get_irn_n(node, 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 0)), new_tarval_from_long(2147483647, get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 612;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_u[2](const32[2147483647], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(2147483647, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 620;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_u[2](const32[2147483647], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(2147483647, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 621;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[2](const32[2147483647], sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Const(get_irn_n(get_irn_n(node, 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 0)), new_tarval_from_long(2147483647, get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 622;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_u[2](const32[2147483647], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(2147483647, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 630;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_u[2](const32[2147483647], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(2147483647, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 631;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[2](const32[2147483647], sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Const(get_irn_n(get_irn_n(node, 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 0)), new_tarval_from_long(2147483647, get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 632;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_u[2](not32(sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 640;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_u[2](not32(sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 641;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[2](not32(sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Not(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 642;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_u[2](not32(sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 650;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_u[2](not32(sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 651;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[2](not32(sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Not(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 652;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_u[2](sub32(VAR_0, VAR_1), not32(sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 660;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_u[2](sub32(VAR_0, VAR_1), not32(sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 661;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[2](sub32(VAR_0, VAR_1), not32(sub32(VAR_0, VAR_1))))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Not(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 662;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_u[2](sub32(VAR_0, VAR_1), not32(sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 670;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_u[2](sub32(VAR_0, VAR_1), not32(sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 671;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[2](sub32(VAR_0, VAR_1), not32(sub32(VAR_0, VAR_1))))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Not(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 672;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[7](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_u[2](VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 680;
		goto done;
	}
	// compound-ia_jcc[7](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_u[2](VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 681;
		goto done;
	}
	// compound-ia_jcc[7](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[2](VAR_1, VAR_0))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 0))) || var1 == get_irn_n(get_irn_n(node, 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 1))) || var0 == get_irn_n(get_irn_n(node, 0), 1))) {
		ir_node *f21_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f22_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f23_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f21_node, f22_node, false); set_ia32_ls_mode(f23_node, mode_Is);
ir_node *f24_node = new_bd_ia32_Jcc(dbgi, block, f23_node, 7);
new_node = f24_node;

		*rule = 682;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[6](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_u[2](VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 690;
		goto done;
	}
	// compound-ia_jcc[6](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_u[2](VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 691;
		goto done;
	}
	// compound-ia_jcc[6](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[2](VAR_1, VAR_0))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 0))) || var1 == get_irn_n(get_irn_n(node, 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 1))) || var0 == get_irn_n(get_irn_n(node, 0), 1))) {
		ir_node *f17_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f18_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f19_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f17_node, f18_node, false); set_ia32_ls_mode(f19_node, mode_Is);
ir_node *f20_node = new_bd_ia32_Jcc(dbgi, block, f19_node, 6);
new_node = f20_node;

		*rule = 692;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[3](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_u[2](VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 700;
		goto done;
	}
	// compound-ia_jcc[3](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_u[2](VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 701;
		goto done;
	}
	// compound-ia_jcc[3](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[2](VAR_0, VAR_1))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 1))) || var1 == get_irn_n(get_irn_n(node, 0), 1))) {
		ir_node *f5_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f6_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f7_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f5_node, f6_node, false); set_ia32_ls_mode(f7_node, mode_Is);
ir_node *f8_node = new_bd_ia32_Jcc(dbgi, block, f7_node, 3);
new_node = f8_node;

		*rule = 702;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[2](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_u[2](VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 710;
		goto done;
	}
	// compound-ia_jcc[2](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_u[2](VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 711;
		goto done;
	}
	// compound-ia_jcc[2](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[2](VAR_0, VAR_1))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 1))) || var1 == get_irn_n(get_irn_n(node, 0), 1))) {
		ir_node *f1_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f2_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f3_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f1_node, f2_node, false); set_ia32_ls_mode(f3_node, mode_Is);
ir_node *f4_node = new_bd_ia32_Jcc(dbgi, block, f3_node, 2);
new_node = f4_node;

		*rule = 712;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[5](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[6](VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 6 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 720;
		goto done;
	}
	// compound-ia_jcc[5](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[6](VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 6 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 721;
		goto done;
	}
	// compound-ia_jcc[5](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[6](VAR_1, VAR_0))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 6 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 0))) || var1 == get_irn_n(get_irn_n(node, 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 1))) || var0 == get_irn_n(get_irn_n(node, 0), 1))) {
		ir_node *f13_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f14_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f15_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f13_node, f14_node, false); set_ia32_ls_mode(f15_node, mode_Is);
ir_node *f16_node = new_bd_ia32_Jcc(dbgi, block, f15_node, 5);
new_node = f16_node;

		*rule = 722;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[5](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[6](VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 6 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 730;
		goto done;
	}
	// compound-ia_jcc[5](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[6](VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 6 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 731;
		goto done;
	}
	// compound-ia_jcc[5](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[6](VAR_0, VAR_1))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 6 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 1))) || var1 == get_irn_n(get_irn_n(node, 0), 1))) {
		ir_node *f13_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f14_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f15_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f13_node, f14_node, false); set_ia32_ls_mode(f15_node, mode_Is);
ir_node *f16_node = new_bd_ia32_Jcc(dbgi, block, f15_node, 5);
new_node = f16_node;

		*rule = 732;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[4](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[6](VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 6 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 740;
		goto done;
	}
	// compound-ia_jcc[4](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[6](VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 6 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 741;
		goto done;
	}
	// compound-ia_jcc[4](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[6](VAR_0, VAR_1))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 6 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 1))) || var1 == get_irn_n(get_irn_n(node, 0), 1))) {
		ir_node *f9_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f10_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f11_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f9_node, f10_node, false); set_ia32_ls_mode(f11_node, mode_Is);
ir_node *f12_node = new_bd_ia32_Jcc(dbgi, block, f11_node, 4);
new_node = f12_node;

		*rule = 742;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[4](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[6](VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 6 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 750;
		goto done;
	}
	// compound-ia_jcc[4](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[6](VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 6 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 751;
		goto done;
	}
	// compound-ia_jcc[4](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[6](VAR_1, VAR_0))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 6 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 0))) || var1 == get_irn_n(get_irn_n(node, 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 1))) || var0 == get_irn_n(get_irn_n(node, 0), 1))) {
		ir_node *f9_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f10_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f11_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f9_node, f10_node, false); set_ia32_ls_mode(f11_node, mode_Is);
ir_node *f12_node = new_bd_ia32_Jcc(dbgi, block, f11_node, 4);
new_node = f12_node;

		*rule = 752;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[5](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[1](VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 1 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 760;
		goto done;
	}
	// compound-ia_jcc[5](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[1](VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 1 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 761;
		goto done;
	}
	// compound-ia_jcc[5](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[1](VAR_1, VAR_0))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 1 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 0))) || var1 == get_irn_n(get_irn_n(node, 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 1))) || var0 == get_irn_n(get_irn_n(node, 0), 1))) {
		ir_node *f13_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f14_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f15_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f13_node, f14_node, false); set_ia32_ls_mode(f15_node, mode_Is);
ir_node *f16_node = new_bd_ia32_Jcc(dbgi, block, f15_node, 5);
new_node = f16_node;

		*rule = 762;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[5](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[1](VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 1 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 770;
		goto done;
	}
	// compound-ia_jcc[5](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[1](VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 1 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 771;
		goto done;
	}
	// compound-ia_jcc[5](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[1](VAR_0, VAR_1))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 1 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 1))) || var1 == get_irn_n(get_irn_n(node, 0), 1))) {
		ir_node *f13_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f14_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f15_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f13_node, f14_node, false); set_ia32_ls_mode(f15_node, mode_Is);
ir_node *f16_node = new_bd_ia32_Jcc(dbgi, block, f15_node, 5);
new_node = f16_node;

		*rule = 772;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[4](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[1](VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 1 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 780;
		goto done;
	}
	// compound-ia_jcc[4](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[1](VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 1 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 781;
		goto done;
	}
	// compound-ia_jcc[4](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[1](VAR_0, VAR_1))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 1 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 1))) || var1 == get_irn_n(get_irn_n(node, 0), 1))) {
		ir_node *f9_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f10_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f11_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f9_node, f10_node, false); set_ia32_ls_mode(f11_node, mode_Is);
ir_node *f12_node = new_bd_ia32_Jcc(dbgi, block, f11_node, 4);
new_node = f12_node;

		*rule = 782;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[4](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[1](VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 1 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 790;
		goto done;
	}
	// compound-ia_jcc[4](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[1](VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 1 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 791;
		goto done;
	}
	// compound-ia_jcc[4](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[1](VAR_1, VAR_0))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 1 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 0))) || var1 == get_irn_n(get_irn_n(node, 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 1))) || var0 == get_irn_n(get_irn_n(node, 0), 1))) {
		ir_node *f9_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f10_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f11_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f9_node, f10_node, false); set_ia32_ls_mode(f11_node, mode_Is);
ir_node *f12_node = new_bd_ia32_Jcc(dbgi, block, f11_node, 4);
new_node = f12_node;

		*rule = 792;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[5](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_u[6](VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 6 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 800;
		goto done;
	}
	// compound-ia_jcc[5](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_u[6](VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 6 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 801;
		goto done;
	}
	// compound-ia_jcc[5](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[6](VAR_1, VAR_0))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 6 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 0))) || var1 == get_irn_n(get_irn_n(node, 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 1))) || var0 == get_irn_n(get_irn_n(node, 0), 1))) {
		ir_node *f13_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f14_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f15_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f13_node, f14_node, false); set_ia32_ls_mode(f15_node, mode_Is);
ir_node *f16_node = new_bd_ia32_Jcc(dbgi, block, f15_node, 5);
new_node = f16_node;

		*rule = 802;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[5](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_u[6](VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 6 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 810;
		goto done;
	}
	// compound-ia_jcc[5](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_u[6](VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 6 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 811;
		goto done;
	}
	// compound-ia_jcc[5](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[6](VAR_0, VAR_1))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 6 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 1))) || var1 == get_irn_n(get_irn_n(node, 0), 1))) {
		ir_node *f13_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f14_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f15_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f13_node, f14_node, false); set_ia32_ls_mode(f15_node, mode_Is);
ir_node *f16_node = new_bd_ia32_Jcc(dbgi, block, f15_node, 5);
new_node = f16_node;

		*rule = 812;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[4](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_u[6](VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 6 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 820;
		goto done;
	}
	// compound-ia_jcc[4](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_u[6](VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 6 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 821;
		goto done;
	}
	// compound-ia_jcc[4](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[6](VAR_0, VAR_1))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 6 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 1))) || var1 == get_irn_n(get_irn_n(node, 0), 1))) {
		ir_node *f9_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f10_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f11_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f9_node, f10_node, false); set_ia32_ls_mode(f11_node, mode_Is);
ir_node *f12_node = new_bd_ia32_Jcc(dbgi, block, f11_node, 4);
new_node = f12_node;

		*rule = 822;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[4](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_u[6](VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 6 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 830;
		goto done;
	}
	// compound-ia_jcc[4](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_u[6](VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 6 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 831;
		goto done;
	}
	// compound-ia_jcc[4](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[6](VAR_1, VAR_0))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 6 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 0))) || var1 == get_irn_n(get_irn_n(node, 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 1))) || var0 == get_irn_n(get_irn_n(node, 0), 1))) {
		ir_node *f9_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f10_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f11_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f9_node, f10_node, false); set_ia32_ls_mode(f11_node, mode_Is);
ir_node *f12_node = new_bd_ia32_Jcc(dbgi, block, f11_node, 4);
new_node = f12_node;

		*rule = 832;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[5](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_u[1](VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 1 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 840;
		goto done;
	}
	// compound-ia_jcc[5](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_u[1](VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 1 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 841;
		goto done;
	}
	// compound-ia_jcc[5](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[1](VAR_0, VAR_1))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 1 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 1))) || var1 == get_irn_n(get_irn_n(node, 0), 1))) {
		ir_node *f13_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f14_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f15_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f13_node, f14_node, false); set_ia32_ls_mode(f15_node, mode_Is);
ir_node *f16_node = new_bd_ia32_Jcc(dbgi, block, f15_node, 5);
new_node = f16_node;

		*rule = 842;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[5](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_u[1](VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 1 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 850;
		goto done;
	}
	// compound-ia_jcc[5](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_u[1](VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 1 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 851;
		goto done;
	}
	// compound-ia_jcc[5](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[1](VAR_1, VAR_0))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 1 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 0))) || var1 == get_irn_n(get_irn_n(node, 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 1))) || var0 == get_irn_n(get_irn_n(node, 0), 1))) {
		ir_node *f13_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f14_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f15_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f13_node, f14_node, false); set_ia32_ls_mode(f15_node, mode_Is);
ir_node *f16_node = new_bd_ia32_Jcc(dbgi, block, f15_node, 5);
new_node = f16_node;

		*rule = 852;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[4](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_u[1](VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 1 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 860;
		goto done;
	}
	// compound-ia_jcc[4](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_u[1](VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 1 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 861;
		goto done;
	}
	// compound-ia_jcc[4](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[1](VAR_1, VAR_0))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 1 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 0))) || var1 == get_irn_n(get_irn_n(node, 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 1))) || var0 == get_irn_n(get_irn_n(node, 0), 1))) {
		ir_node *f9_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f10_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f11_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f9_node, f10_node, false); set_ia32_ls_mode(f11_node, mode_Is);
ir_node *f12_node = new_bd_ia32_Jcc(dbgi, block, f11_node, 4);
new_node = f12_node;

		*rule = 862;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[4](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_u[1](VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 1 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 870;
		goto done;
	}
	// compound-ia_jcc[4](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_u[1](VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 1 && (get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 871;
		goto done;
	}
	// compound-ia_jcc[4](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_u[1](VAR_0, VAR_1))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 1 && (get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Iu || get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 1))) || var1 == get_irn_n(get_irn_n(node, 0), 1))) {
		ir_node *f9_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f10_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f11_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f9_node, f10_node, false); set_ia32_ls_mode(f11_node, mode_Is);
ir_node *f12_node = new_bd_ia32_Jcc(dbgi, block, f11_node, 4);
new_node = f12_node;

		*rule = 872;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[5](sub32(VAR_0, VAR_1), const32[0])))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(0, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 880;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[5](sub32(VAR_0, VAR_1), const32[0])))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(0, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 881;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[5](sub32(VAR_0, VAR_1), const32[0]))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(node, 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 1)), new_tarval_from_long(0, get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 882;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[5](sub32(VAR_0, VAR_1), const32[0])))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(0, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 890;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[5](sub32(VAR_0, VAR_1), const32[0])))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(0, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 891;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[5](sub32(VAR_0, VAR_1), const32[0]))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(node, 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 1)), new_tarval_from_long(0, get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 892;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[5](sub32(VAR_0, VAR_1), const32[0])))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(0, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 900;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[5](sub32(VAR_0, VAR_1), const32[0])))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(0, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 901;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[5](sub32(VAR_0, VAR_1), const32[0]))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(node, 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 1)), new_tarval_from_long(0, get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 902;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[5](sub32(VAR_0, VAR_1), const32[0])))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(0, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 910;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[5](sub32(VAR_0, VAR_1), const32[0])))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(0, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 911;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[5](sub32(VAR_0, VAR_1), const32[0]))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(node, 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 1)), new_tarval_from_long(0, get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 912;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[5](const32[4294967295], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 920;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[5](const32[4294967295], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 921;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[5](const32[4294967295], sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Const(get_irn_n(get_irn_n(node, 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 0)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 922;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[5](const32[4294967295], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 930;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[5](const32[4294967295], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 931;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[5](const32[4294967295], sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Const(get_irn_n(get_irn_n(node, 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 0)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 932;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[5](const32[4294967295], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 940;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[5](const32[4294967295], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 941;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[5](const32[4294967295], sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Const(get_irn_n(get_irn_n(node, 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 0)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 942;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[5](const32[4294967295], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 950;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[5](const32[4294967295], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 951;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[5](const32[4294967295], sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Const(get_irn_n(get_irn_n(node, 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 0)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 952;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[5](sub32(VAR_0, VAR_1), eor32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 960;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[5](sub32(VAR_0, VAR_1), eor32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 961;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[5](sub32(VAR_0, VAR_1), eor32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 962;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[5](sub32(VAR_0, VAR_1), eor32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 970;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[5](sub32(VAR_0, VAR_1), eor32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 971;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[5](sub32(VAR_0, VAR_1), eor32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 972;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[5](sub32(VAR_0, VAR_1), eor32(VAR_1, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 980;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[5](sub32(VAR_0, VAR_1), eor32(VAR_1, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 981;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[5](sub32(VAR_0, VAR_1), eor32(VAR_1, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 982;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[5](sub32(VAR_0, VAR_1), eor32(VAR_1, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 990;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[5](sub32(VAR_0, VAR_1), eor32(VAR_1, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 991;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[5](sub32(VAR_0, VAR_1), eor32(VAR_1, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 992;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[5](sub32(VAR_0, VAR_1), eor32(VAR_0, VAR_0))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1000;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[5](sub32(VAR_0, VAR_1), eor32(VAR_0, VAR_0))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1001;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[5](sub32(VAR_0, VAR_1), eor32(VAR_0, VAR_0)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 1002;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[5](sub32(VAR_0, VAR_1), eor32(VAR_0, VAR_0))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1010;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[5](sub32(VAR_0, VAR_1), eor32(VAR_0, VAR_0))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1011;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[5](sub32(VAR_0, VAR_1), eor32(VAR_0, VAR_0)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 1012;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[5](sub32(VAR_0, VAR_1), eor32(VAR_0, VAR_0))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1020;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[5](sub32(VAR_0, VAR_1), eor32(VAR_0, VAR_0))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1021;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[5](sub32(VAR_0, VAR_1), eor32(VAR_0, VAR_0)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 1022;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[5](sub32(VAR_0, VAR_1), eor32(VAR_0, VAR_0))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1030;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[5](sub32(VAR_0, VAR_1), eor32(VAR_0, VAR_0))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1031;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[5](sub32(VAR_0, VAR_1), eor32(VAR_0, VAR_0)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 1032;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[5](sub32(VAR_0, VAR_1), eor32(VAR_1, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1040;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[5](sub32(VAR_0, VAR_1), eor32(VAR_1, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1041;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[5](sub32(VAR_0, VAR_1), eor32(VAR_1, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 1042;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[5](sub32(VAR_0, VAR_1), eor32(VAR_1, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1050;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[5](sub32(VAR_0, VAR_1), eor32(VAR_1, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1051;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[5](sub32(VAR_0, VAR_1), eor32(VAR_1, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 1052;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[5](sub32(VAR_0, VAR_1), not32(sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1060;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[5](sub32(VAR_0, VAR_1), not32(sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1061;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[5](sub32(VAR_0, VAR_1), not32(sub32(VAR_0, VAR_1))))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Not(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 1062;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[5](sub32(VAR_0, VAR_1), not32(sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1070;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[5](sub32(VAR_0, VAR_1), not32(sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1071;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[5](sub32(VAR_0, VAR_1), not32(sub32(VAR_0, VAR_1))))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Not(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 1072;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[5](not32(sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1080;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[5](not32(sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1081;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[5](not32(sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Not(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 1082;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[5](not32(sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1090;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[5](not32(sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1091;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[5](not32(sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Not(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 1092;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1100;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1101;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 1102;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1110;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1111;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 1112;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1120;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1121;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 1122;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1130;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1131;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 1132;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(VAR_1, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1140;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(VAR_1, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1141;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(VAR_1, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 1142;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(VAR_1, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1150;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(VAR_1, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1151;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(VAR_1, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 1152;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(VAR_1, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1160;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(VAR_1, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1161;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(VAR_1, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 1162;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_0))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1170;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_0))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1171;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_0)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 1172;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(VAR_1, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1180;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(VAR_1, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1181;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(VAR_1, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 1182;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_0))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1190;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_0))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1191;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_0)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 1192;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_0))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1200;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_0))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1201;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_0)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 1202;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_0))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1210;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_0))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1211;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_0)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 1212;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(VAR_1, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1220;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(VAR_1, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1221;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(VAR_1, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 1222;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(VAR_1, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1230;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(VAR_1, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1231;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(VAR_1, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 1232;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(VAR_1, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1240;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(VAR_1, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1241;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(VAR_1, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 1242;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(VAR_1, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1250;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(VAR_1, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1251;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(VAR_1, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 1252;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_0))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1260;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_0))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1261;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_0)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 1262;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_0))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1270;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_0))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1271;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_0)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 1272;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_0))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1280;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_0))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1281;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_0)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 1282;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_0))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1290;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_0))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1291;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[5](sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_0)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 1292;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[15](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[5](VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1300;
		goto done;
	}
	// compound-ia_jcc[15](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[5](VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1301;
		goto done;
	}
	// compound-ia_jcc[15](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[5](VAR_1, VAR_0))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 0))) || var1 == get_irn_n(get_irn_n(node, 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 1))) || var0 == get_irn_n(get_irn_n(node, 0), 1))) {
		ir_node *f45_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f46_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f47_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f45_node, f46_node, false); set_ia32_ls_mode(f47_node, mode_Is);
ir_node *f48_node = new_bd_ia32_Jcc(dbgi, block, f47_node, 15);
new_node = f48_node;

		*rule = 1302;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[14](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[5](VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1310;
		goto done;
	}
	// compound-ia_jcc[14](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[5](VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1311;
		goto done;
	}
	// compound-ia_jcc[14](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[5](VAR_1, VAR_0))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 0))) || var1 == get_irn_n(get_irn_n(node, 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 1))) || var0 == get_irn_n(get_irn_n(node, 0), 1))) {
		ir_node *f41_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f42_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f43_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f41_node, f42_node, false); set_ia32_ls_mode(f43_node, mode_Is);
ir_node *f44_node = new_bd_ia32_Jcc(dbgi, block, f43_node, 14);
new_node = f44_node;

		*rule = 1312;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[13](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[5](VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1320;
		goto done;
	}
	// compound-ia_jcc[13](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[5](VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1321;
		goto done;
	}
	// compound-ia_jcc[13](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[5](VAR_0, VAR_1))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 1))) || var1 == get_irn_n(get_irn_n(node, 0), 1))) {
		ir_node *f37_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f38_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f39_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f37_node, f38_node, false); set_ia32_ls_mode(f39_node, mode_Is);
ir_node *f40_node = new_bd_ia32_Jcc(dbgi, block, f39_node, 13);
new_node = f40_node;

		*rule = 1322;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[12](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[5](VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1330;
		goto done;
	}
	// compound-ia_jcc[12](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[5](VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1331;
		goto done;
	}
	// compound-ia_jcc[12](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[5](VAR_0, VAR_1))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 5 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 1))) || var1 == get_irn_n(get_irn_n(node, 0), 1))) {
		ir_node *f33_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f34_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f35_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f33_node, f34_node, false); set_ia32_ls_mode(f35_node, mode_Is);
ir_node *f36_node = new_bd_ia32_Jcc(dbgi, block, f35_node, 12);
new_node = f36_node;

		*rule = 1332;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[2](sub32(VAR_0, VAR_1), const32[0])))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(0, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1340;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[2](sub32(VAR_0, VAR_1), const32[0])))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(0, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1341;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[2](sub32(VAR_0, VAR_1), const32[0]))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(node, 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 1)), new_tarval_from_long(0, get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 1342;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[2](sub32(VAR_0, VAR_1), const32[0])))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(0, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1350;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[2](sub32(VAR_0, VAR_1), const32[0])))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(0, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1351;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[2](sub32(VAR_0, VAR_1), const32[0]))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(node, 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 1)), new_tarval_from_long(0, get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 1352;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[2](sub32(VAR_0, VAR_1), const32[0])))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(0, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1360;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[2](sub32(VAR_0, VAR_1), const32[0])))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(0, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1361;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[2](sub32(VAR_0, VAR_1), const32[0]))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(node, 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 1)), new_tarval_from_long(0, get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 1362;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[2](sub32(VAR_0, VAR_1), const32[0])))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(0, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1370;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[2](sub32(VAR_0, VAR_1), const32[0])))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(0, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1371;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[2](sub32(VAR_0, VAR_1), const32[0]))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(node, 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 1)), new_tarval_from_long(0, get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 1372;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[2](const32[4294967295], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1380;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[2](const32[4294967295], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1381;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[2](const32[4294967295], sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Const(get_irn_n(get_irn_n(node, 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 0)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 1382;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[2](const32[4294967295], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1390;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[2](const32[4294967295], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1391;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[2](const32[4294967295], sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Const(get_irn_n(get_irn_n(node, 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 0)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 1392;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[2](const32[4294967295], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1400;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[2](const32[4294967295], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1401;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[2](const32[4294967295], sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Const(get_irn_n(get_irn_n(node, 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 0)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 1402;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[2](const32[4294967295], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1410;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[2](const32[4294967295], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1411;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[2](const32[4294967295], sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Const(get_irn_n(get_irn_n(node, 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 0)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 1412;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[2](sub32(VAR_0, VAR_1), eor32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1420;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[2](sub32(VAR_0, VAR_1), eor32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1421;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[2](sub32(VAR_0, VAR_1), eor32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 1422;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[2](sub32(VAR_0, VAR_1), eor32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1430;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[2](sub32(VAR_0, VAR_1), eor32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1431;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[2](sub32(VAR_0, VAR_1), eor32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 1432;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[2](sub32(VAR_0, VAR_1), eor32(VAR_0, VAR_0))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1440;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[2](sub32(VAR_0, VAR_1), eor32(VAR_0, VAR_0))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1441;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[2](sub32(VAR_0, VAR_1), eor32(VAR_0, VAR_0)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 1442;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[2](sub32(VAR_0, VAR_1), eor32(VAR_0, VAR_0))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1450;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[2](sub32(VAR_0, VAR_1), eor32(VAR_0, VAR_0))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1451;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[2](sub32(VAR_0, VAR_1), eor32(VAR_0, VAR_0)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 1452;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[2](sub32(VAR_0, VAR_1), eor32(VAR_1, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1460;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[2](sub32(VAR_0, VAR_1), eor32(VAR_1, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1461;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[2](sub32(VAR_0, VAR_1), eor32(VAR_1, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 1462;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[2](sub32(VAR_0, VAR_1), eor32(VAR_1, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1470;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[2](sub32(VAR_0, VAR_1), eor32(VAR_1, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1471;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[2](sub32(VAR_0, VAR_1), eor32(VAR_1, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 1472;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[2](sub32(VAR_0, VAR_1), eor32(VAR_1, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1480;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[2](sub32(VAR_0, VAR_1), eor32(VAR_1, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1481;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[2](sub32(VAR_0, VAR_1), eor32(VAR_1, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 1482;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[2](sub32(VAR_0, VAR_1), eor32(VAR_0, VAR_0))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1490;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[2](sub32(VAR_0, VAR_1), eor32(VAR_0, VAR_0))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1491;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[2](sub32(VAR_0, VAR_1), eor32(VAR_0, VAR_0)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 1492;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[2](sub32(VAR_0, VAR_1), eor32(VAR_0, VAR_0))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1500;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[2](sub32(VAR_0, VAR_1), eor32(VAR_0, VAR_0))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1501;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[2](sub32(VAR_0, VAR_1), eor32(VAR_0, VAR_0)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 1502;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[2](sub32(VAR_0, VAR_1), eor32(VAR_1, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1510;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[2](sub32(VAR_0, VAR_1), eor32(VAR_1, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1511;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[2](sub32(VAR_0, VAR_1), eor32(VAR_1, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Eor(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 1512;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[2](not32(sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1520;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[2](not32(sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1521;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[2](not32(sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Not(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 1522;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[2](not32(sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1530;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[2](not32(sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1531;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[2](not32(sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Not(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 1532;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[2](sub32(VAR_0, VAR_1), not32(sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1540;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[2](sub32(VAR_0, VAR_1), not32(sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1541;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[2](sub32(VAR_0, VAR_1), not32(sub32(VAR_0, VAR_1))))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Not(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 1542;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[2](sub32(VAR_0, VAR_1), not32(sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1550;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[2](sub32(VAR_0, VAR_1), not32(sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1551;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[2](sub32(VAR_0, VAR_1), not32(sub32(VAR_0, VAR_1))))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Not(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 1552;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1560;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1561;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 1562;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1570;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1571;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 1572;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1580;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1581;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 1582;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1590;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1591;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 1592;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(VAR_1, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1600;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(VAR_1, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1601;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(VAR_1, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 1602;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_0))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1610;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_0))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1611;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_0)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 1612;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_0))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1620;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_0))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1621;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_0)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 1622;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_0))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1630;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_0))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1631;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_0)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 1632;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(VAR_1, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1640;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(VAR_1, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1641;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(VAR_1, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 1642;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_0))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1650;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_0))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1651;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_0)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 1652;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(VAR_1, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1660;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(VAR_1, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1661;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(VAR_1, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 1662;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(VAR_1, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1670;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(VAR_1, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1671;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(VAR_1, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 1672;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(VAR_1, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1680;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(VAR_1, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1681;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(VAR_1, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 1682;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(VAR_1, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1690;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(VAR_1, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1691;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(VAR_1, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 1692;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(VAR_1, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1700;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(VAR_1, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1701;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(VAR_1, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 1702;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(VAR_1, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1710;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(VAR_1, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1711;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(VAR_1, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 1712;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_0))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1720;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_0))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1721;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_0)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 1722;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_0))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1730;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_0))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1731;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_0)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 1732;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_0))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1740;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_0))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1741;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_0)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 1742;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_0))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1750;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_0))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1751;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[2](sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_0)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 1752;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[15](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[2](VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1760;
		goto done;
	}
	// compound-ia_jcc[15](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[2](VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1761;
		goto done;
	}
	// compound-ia_jcc[15](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[2](VAR_1, VAR_0))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 0))) || var1 == get_irn_n(get_irn_n(node, 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 1))) || var0 == get_irn_n(get_irn_n(node, 0), 1))) {
		ir_node *f45_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f46_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f47_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f45_node, f46_node, false); set_ia32_ls_mode(f47_node, mode_Is);
ir_node *f48_node = new_bd_ia32_Jcc(dbgi, block, f47_node, 15);
new_node = f48_node;

		*rule = 1762;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[14](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[2](VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1770;
		goto done;
	}
	// compound-ia_jcc[14](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[2](VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1771;
		goto done;
	}
	// compound-ia_jcc[14](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[2](VAR_1, VAR_0))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 0))) || var1 == get_irn_n(get_irn_n(node, 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 1))) || var0 == get_irn_n(get_irn_n(node, 0), 1))) {
		ir_node *f41_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f42_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f43_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f41_node, f42_node, false); set_ia32_ls_mode(f43_node, mode_Is);
ir_node *f44_node = new_bd_ia32_Jcc(dbgi, block, f43_node, 14);
new_node = f44_node;

		*rule = 1772;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[13](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[2](VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1780;
		goto done;
	}
	// compound-ia_jcc[13](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[2](VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1781;
		goto done;
	}
	// compound-ia_jcc[13](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[2](VAR_0, VAR_1))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 1))) || var1 == get_irn_n(get_irn_n(node, 0), 1))) {
		ir_node *f37_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f38_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f39_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f37_node, f38_node, false); set_ia32_ls_mode(f39_node, mode_Is);
ir_node *f40_node = new_bd_ia32_Jcc(dbgi, block, f39_node, 13);
new_node = f40_node;

		*rule = 1782;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[12](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[2](VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1790;
		goto done;
	}
	// compound-ia_jcc[12](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[2](VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1791;
		goto done;
	}
	// compound-ia_jcc[12](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[2](VAR_0, VAR_1))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 2 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 1))) || var1 == get_irn_n(get_irn_n(node, 0), 1))) {
		ir_node *f33_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f34_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f35_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f33_node, f34_node, false); set_ia32_ls_mode(f35_node, mode_Is);
ir_node *f36_node = new_bd_ia32_Jcc(dbgi, block, f35_node, 12);
new_node = f36_node;

		*rule = 1792;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[4](const32[0], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(0, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1800;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[4](const32[0], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(0, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1801;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[4](const32[0], sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Const(get_irn_n(get_irn_n(node, 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 0)), new_tarval_from_long(0, get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 1802;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[4](const32[0], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(0, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1810;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[4](const32[0], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(0, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1811;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[4](const32[0], sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Const(get_irn_n(get_irn_n(node, 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 0)), new_tarval_from_long(0, get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 1812;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[4](const32[0], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(0, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1820;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[4](const32[0], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(0, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1821;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[4](const32[0], sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Const(get_irn_n(get_irn_n(node, 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 0)), new_tarval_from_long(0, get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 1822;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[4](const32[0], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(0, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1830;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[4](const32[0], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(0, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1831;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[4](const32[0], sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Const(get_irn_n(get_irn_n(node, 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 0)), new_tarval_from_long(0, get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 1832;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[4](sub32(VAR_0, VAR_1), const32[4294967295])))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1840;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[4](sub32(VAR_0, VAR_1), const32[4294967295])))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1841;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[4](sub32(VAR_0, VAR_1), const32[4294967295]))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(node, 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 1)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 1842;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[4](sub32(VAR_0, VAR_1), const32[4294967295])))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1850;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[4](sub32(VAR_0, VAR_1), const32[4294967295])))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1851;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[4](sub32(VAR_0, VAR_1), const32[4294967295]))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(node, 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 1)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 1852;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[4](sub32(VAR_0, VAR_1), const32[4294967295])))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1860;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[4](sub32(VAR_0, VAR_1), const32[4294967295])))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1861;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[4](sub32(VAR_0, VAR_1), const32[4294967295]))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(node, 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 1)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 1862;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[4](sub32(VAR_0, VAR_1), const32[4294967295])))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1870;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[4](sub32(VAR_0, VAR_1), const32[4294967295])))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1871;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[4](sub32(VAR_0, VAR_1), const32[4294967295]))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(node, 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 1)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 1872;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[4](eor32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1880;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[4](eor32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1881;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[4](eor32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Eor(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 1882;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[4](eor32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1890;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[4](eor32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1891;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[4](eor32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Eor(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 1892;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[4](eor32(VAR_1, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1900;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[4](eor32(VAR_1, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1901;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[4](eor32(VAR_1, VAR_1), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Eor(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 1902;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[4](eor32(VAR_0, VAR_0), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1910;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[4](eor32(VAR_0, VAR_0), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1911;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[4](eor32(VAR_0, VAR_0), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Eor(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 1912;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[4](eor32(VAR_0, VAR_0), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1920;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[4](eor32(VAR_0, VAR_0), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1921;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[4](eor32(VAR_0, VAR_0), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Eor(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 1922;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[4](eor32(VAR_1, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1930;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[4](eor32(VAR_1, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1931;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[4](eor32(VAR_1, VAR_1), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Eor(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 1932;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[4](eor32(VAR_1, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1940;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[4](eor32(VAR_1, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1941;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[4](eor32(VAR_1, VAR_1), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Eor(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 1942;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[4](eor32(VAR_0, VAR_0), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1950;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[4](eor32(VAR_0, VAR_0), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1951;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[4](eor32(VAR_0, VAR_0), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Eor(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 1952;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[4](eor32(VAR_0, VAR_0), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1960;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[4](eor32(VAR_0, VAR_0), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1961;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[4](eor32(VAR_0, VAR_0), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Eor(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 1962;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[4](eor32(VAR_1, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1970;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[4](eor32(VAR_1, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1971;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[4](eor32(VAR_1, VAR_1), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Eor(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 1972;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[4](sub32(VAR_0, VAR_1), not32(sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1980;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[4](sub32(VAR_0, VAR_1), not32(sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1981;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[4](sub32(VAR_0, VAR_1), not32(sub32(VAR_0, VAR_1))))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Not(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 1982;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[4](sub32(VAR_0, VAR_1), not32(sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 1990;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[4](sub32(VAR_0, VAR_1), not32(sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 1991;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[4](sub32(VAR_0, VAR_1), not32(sub32(VAR_0, VAR_1))))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Not(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 1992;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[4](not32(sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2000;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[4](not32(sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2001;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[4](not32(sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Not(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 2002;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[4](not32(sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2010;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[4](not32(sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2011;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[4](not32(sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Not(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 2012;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[4](sub32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2020;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[4](sub32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2021;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[4](sub32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 2022;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[4](sub32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2030;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[4](sub32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2031;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[4](sub32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 2032;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[4](sub32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2040;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[4](sub32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2041;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[4](sub32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 2042;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[4](sub32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2050;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[4](sub32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2051;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[4](sub32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 2052;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[4](sub32(VAR_1, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2060;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[4](sub32(VAR_1, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2061;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[4](sub32(VAR_1, VAR_1), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 2062;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[4](sub32(VAR_1, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2070;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[4](sub32(VAR_1, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2071;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[4](sub32(VAR_1, VAR_1), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 2072;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[4](sub32(VAR_0, VAR_0), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2080;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[4](sub32(VAR_0, VAR_0), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2081;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[4](sub32(VAR_0, VAR_0), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 2082;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[4](sub32(VAR_0, VAR_0), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2090;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[4](sub32(VAR_0, VAR_0), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2091;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[4](sub32(VAR_0, VAR_0), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 2092;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[4](sub32(VAR_1, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2100;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[4](sub32(VAR_1, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2101;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[4](sub32(VAR_1, VAR_1), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 2102;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[4](sub32(VAR_1, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2110;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[4](sub32(VAR_1, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2111;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[4](sub32(VAR_1, VAR_1), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 2112;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[4](sub32(VAR_0, VAR_0), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2120;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[4](sub32(VAR_0, VAR_0), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2121;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[4](sub32(VAR_0, VAR_0), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 2122;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[4](sub32(VAR_0, VAR_0), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2130;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[4](sub32(VAR_0, VAR_0), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2131;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[4](sub32(VAR_0, VAR_0), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 2132;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[4](sub32(VAR_1, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2140;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[4](sub32(VAR_1, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2141;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[4](sub32(VAR_1, VAR_1), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 2142;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[4](sub32(VAR_1, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2150;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[4](sub32(VAR_1, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2151;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[4](sub32(VAR_1, VAR_1), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 2152;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[4](sub32(VAR_1, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2160;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[4](sub32(VAR_1, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2161;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[4](sub32(VAR_1, VAR_1), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 2162;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[4](sub32(VAR_0, VAR_0), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2170;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[4](sub32(VAR_0, VAR_0), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2171;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[4](sub32(VAR_0, VAR_0), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 2172;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[4](sub32(VAR_0, VAR_0), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2180;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[4](sub32(VAR_0, VAR_0), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2181;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[4](sub32(VAR_0, VAR_0), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 2182;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[4](sub32(VAR_1, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2190;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[4](sub32(VAR_1, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2191;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[4](sub32(VAR_1, VAR_1), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 2192;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[4](sub32(VAR_0, VAR_0), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2200;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[4](sub32(VAR_0, VAR_0), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2201;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[4](sub32(VAR_0, VAR_0), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 2202;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[4](sub32(VAR_0, VAR_0), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2210;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[4](sub32(VAR_0, VAR_0), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2211;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[4](sub32(VAR_0, VAR_0), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 2212;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[15](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[4](VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2220;
		goto done;
	}
	// compound-ia_jcc[15](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[4](VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2221;
		goto done;
	}
	// compound-ia_jcc[15](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[4](VAR_0, VAR_1))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 1))) || var1 == get_irn_n(get_irn_n(node, 0), 1))) {
		ir_node *f45_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f46_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f47_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f45_node, f46_node, false); set_ia32_ls_mode(f47_node, mode_Is);
ir_node *f48_node = new_bd_ia32_Jcc(dbgi, block, f47_node, 15);
new_node = f48_node;

		*rule = 2222;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[14](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[4](VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2230;
		goto done;
	}
	// compound-ia_jcc[14](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[4](VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2231;
		goto done;
	}
	// compound-ia_jcc[14](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[4](VAR_0, VAR_1))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 1))) || var1 == get_irn_n(get_irn_n(node, 0), 1))) {
		ir_node *f41_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f42_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f43_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f41_node, f42_node, false); set_ia32_ls_mode(f43_node, mode_Is);
ir_node *f44_node = new_bd_ia32_Jcc(dbgi, block, f43_node, 14);
new_node = f44_node;

		*rule = 2232;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[13](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[4](VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2240;
		goto done;
	}
	// compound-ia_jcc[13](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[4](VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2241;
		goto done;
	}
	// compound-ia_jcc[13](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[4](VAR_1, VAR_0))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 0))) || var1 == get_irn_n(get_irn_n(node, 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 1))) || var0 == get_irn_n(get_irn_n(node, 0), 1))) {
		ir_node *f37_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f38_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f39_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f37_node, f38_node, false); set_ia32_ls_mode(f39_node, mode_Is);
ir_node *f40_node = new_bd_ia32_Jcc(dbgi, block, f39_node, 13);
new_node = f40_node;

		*rule = 2242;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[12](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[4](VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2250;
		goto done;
	}
	// compound-ia_jcc[12](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[4](VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2251;
		goto done;
	}
	// compound-ia_jcc[12](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[4](VAR_1, VAR_0))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 4 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 0))) || var1 == get_irn_n(get_irn_n(node, 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 1))) || var0 == get_irn_n(get_irn_n(node, 0), 1))) {
		ir_node *f33_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f34_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f35_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f33_node, f34_node, false); set_ia32_ls_mode(f35_node, mode_Is);
ir_node *f36_node = new_bd_ia32_Jcc(dbgi, block, f35_node, 12);
new_node = f36_node;

		*rule = 2252;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[3](const32[0], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(0, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2260;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[3](const32[0], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(0, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2261;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[3](const32[0], sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Const(get_irn_n(get_irn_n(node, 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 0)), new_tarval_from_long(0, get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 2262;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[3](const32[0], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(0, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2270;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[3](const32[0], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(0, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2271;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[3](const32[0], sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Const(get_irn_n(get_irn_n(node, 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 0)), new_tarval_from_long(0, get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 2272;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[3](const32[0], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(0, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2280;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[3](const32[0], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(0, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2281;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[3](const32[0], sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Const(get_irn_n(get_irn_n(node, 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 0)), new_tarval_from_long(0, get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 2282;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[3](const32[0], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(0, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2290;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[3](const32[0], sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)), new_tarval_from_long(0, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2291;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[3](const32[0], sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Const(get_irn_n(get_irn_n(node, 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 0)), new_tarval_from_long(0, get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 2292;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[3](sub32(VAR_0, VAR_1), const32[4294967295])))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2300;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[3](sub32(VAR_0, VAR_1), const32[4294967295])))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2301;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[3](sub32(VAR_0, VAR_1), const32[4294967295]))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(node, 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 1)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 2302;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[3](sub32(VAR_0, VAR_1), const32[4294967295])))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2310;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[3](sub32(VAR_0, VAR_1), const32[4294967295])))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2311;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[3](sub32(VAR_0, VAR_1), const32[4294967295]))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(node, 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 1)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 2312;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[3](sub32(VAR_0, VAR_1), const32[4294967295])))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2320;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[3](sub32(VAR_0, VAR_1), const32[4294967295])))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2321;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[3](sub32(VAR_0, VAR_1), const32[4294967295]))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(node, 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 1)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 2322;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[3](sub32(VAR_0, VAR_1), const32[4294967295])))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2330;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[3](sub32(VAR_0, VAR_1), const32[4294967295])))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2331;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[3](sub32(VAR_0, VAR_1), const32[4294967295]))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(node, 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 1)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 2332;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[3](eor32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2340;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[3](eor32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2341;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[3](eor32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Eor(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 2342;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[3](eor32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2350;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[3](eor32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2351;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[3](eor32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Eor(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 2352;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[3](eor32(VAR_1, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2360;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[3](eor32(VAR_1, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2361;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[3](eor32(VAR_1, VAR_1), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Eor(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 2362;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[3](eor32(VAR_1, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2370;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[3](eor32(VAR_1, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2371;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[3](eor32(VAR_1, VAR_1), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Eor(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 2372;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[3](eor32(VAR_0, VAR_0), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2380;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[3](eor32(VAR_0, VAR_0), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2381;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[3](eor32(VAR_0, VAR_0), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Eor(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 2382;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[3](eor32(VAR_0, VAR_0), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2390;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[3](eor32(VAR_0, VAR_0), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2391;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[3](eor32(VAR_0, VAR_0), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Eor(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 2392;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[3](eor32(VAR_0, VAR_0), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2400;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[3](eor32(VAR_0, VAR_0), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2401;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[3](eor32(VAR_0, VAR_0), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Eor(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 2402;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[3](eor32(VAR_0, VAR_0), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2410;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[3](eor32(VAR_0, VAR_0), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2411;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[3](eor32(VAR_0, VAR_0), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Eor(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 2412;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[3](eor32(VAR_1, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2420;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[3](eor32(VAR_1, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2421;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[3](eor32(VAR_1, VAR_1), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Eor(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 2422;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[3](eor32(VAR_1, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2430;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[3](eor32(VAR_1, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Eor(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2431;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[3](eor32(VAR_1, VAR_1), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Eor(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 2432;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[3](not32(sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2440;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[3](not32(sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2441;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[3](not32(sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Not(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 2442;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[3](not32(sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2450;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[3](not32(sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2451;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[3](not32(sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Not(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 2452;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[3](sub32(VAR_0, VAR_1), not32(sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2460;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[3](sub32(VAR_0, VAR_1), not32(sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2461;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[3](sub32(VAR_0, VAR_1), not32(sub32(VAR_0, VAR_1))))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Not(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 2462;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[3](sub32(VAR_0, VAR_1), not32(sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2470;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[3](sub32(VAR_0, VAR_1), not32(sub32(VAR_0, VAR_1)))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2471;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[3](sub32(VAR_0, VAR_1), not32(sub32(VAR_0, VAR_1))))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Not(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 2472;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[3](sub32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2480;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[3](sub32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2481;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[3](sub32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 2482;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[3](sub32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2490;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[3](sub32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2491;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[3](sub32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 2492;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[3](sub32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2500;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[3](sub32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2501;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[3](sub32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 2502;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[3](sub32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2510;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[3](sub32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2511;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[3](sub32(sub32(VAR_0, VAR_1), sub32(VAR_0, VAR_1)), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 3 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 2512;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[3](sub32(VAR_1, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2520;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[3](sub32(VAR_1, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2521;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[3](sub32(VAR_1, VAR_1), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 2522;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[3](sub32(VAR_1, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2530;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[3](sub32(VAR_1, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2531;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[3](sub32(VAR_1, VAR_1), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 2532;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[3](sub32(VAR_0, VAR_0), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2540;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[3](sub32(VAR_0, VAR_0), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2541;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[3](sub32(VAR_0, VAR_0), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 2542;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[3](sub32(VAR_1, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2550;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[3](sub32(VAR_1, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2551;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[3](sub32(VAR_1, VAR_1), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 2552;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[3](sub32(VAR_1, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2560;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[3](sub32(VAR_1, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2561;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[3](sub32(VAR_1, VAR_1), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 2562;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[3](sub32(VAR_0, VAR_0), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2570;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[3](sub32(VAR_0, VAR_0), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2571;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[3](sub32(VAR_0, VAR_0), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 2572;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[3](sub32(VAR_0, VAR_0), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2580;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[3](sub32(VAR_0, VAR_0), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2581;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[3](sub32(VAR_0, VAR_0), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 2582;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[3](sub32(VAR_0, VAR_0), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2590;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[3](sub32(VAR_0, VAR_0), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2591;
		goto done;
	}
	// compound-ia_jcc[9](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[3](sub32(VAR_0, VAR_0), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f29_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f30_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f31_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f29_node, f30_node, false); set_ia32_ls_mode(f31_node, mode_Is);
ir_node *f32_node = new_bd_ia32_Jcc(dbgi, block, f31_node, 9);
new_node = f32_node;

		*rule = 2592;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[3](sub32(VAR_1, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2600;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[3](sub32(VAR_1, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2601;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[3](sub32(VAR_1, VAR_1), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 2602;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[3](sub32(VAR_1, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2610;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[3](sub32(VAR_1, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2611;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[3](sub32(VAR_1, VAR_1), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 2612;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[3](sub32(VAR_0, VAR_0), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2620;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[3](sub32(VAR_0, VAR_0), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2621;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[3](sub32(VAR_0, VAR_0), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 2622;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[3](sub32(VAR_1, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2630;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[3](sub32(VAR_1, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2631;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[3](sub32(VAR_1, VAR_1), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 2632;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[3](sub32(VAR_0, VAR_0), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2640;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[3](sub32(VAR_0, VAR_0), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2641;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[3](sub32(VAR_0, VAR_0), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 2642;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[3](sub32(VAR_0, VAR_0), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2650;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[3](sub32(VAR_0, VAR_0), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2651;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[3](sub32(VAR_0, VAR_0), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 2652;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[3](sub32(VAR_1, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2660;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[3](sub32(VAR_1, VAR_1), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2661;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[3](sub32(VAR_1, VAR_1), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 2662;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[3](sub32(VAR_0, VAR_0), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2670;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[3](sub32(VAR_0, VAR_0), sub32(VAR_0, VAR_1))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2671;
		goto done;
	}
	// compound-ia_jcc[8](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[3](sub32(VAR_0, VAR_0), sub32(VAR_0, VAR_1)))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Sub(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Sub(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) {
		ir_node *f25_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f26_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f27_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f25_node, f26_node, false); set_ia32_ls_mode(f27_node, mode_Is);
ir_node *f28_node = new_bd_ia32_Jcc(dbgi, block, f27_node, 8);
new_node = f28_node;

		*rule = 2672;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[15](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[3](VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2680;
		goto done;
	}
	// compound-ia_jcc[15](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[3](VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2681;
		goto done;
	}
	// compound-ia_jcc[15](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[3](VAR_0, VAR_1))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 1))) || var1 == get_irn_n(get_irn_n(node, 0), 1))) {
		ir_node *f45_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f46_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f47_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f45_node, f46_node, false); set_ia32_ls_mode(f47_node, mode_Is);
ir_node *f48_node = new_bd_ia32_Jcc(dbgi, block, f47_node, 15);
new_node = f48_node;

		*rule = 2682;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[14](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[3](VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2690;
		goto done;
	}
	// compound-ia_jcc[14](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[3](VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2691;
		goto done;
	}
	// compound-ia_jcc[14](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[3](VAR_0, VAR_1))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 1))) || var1 == get_irn_n(get_irn_n(node, 0), 1))) {
		ir_node *f41_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f42_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f43_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f41_node, f42_node, false); set_ia32_ls_mode(f43_node, mode_Is);
ir_node *f44_node = new_bd_ia32_Jcc(dbgi, block, f43_node, 14);
new_node = f44_node;

		*rule = 2692;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[13](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_0(cond(cmp32_s[3](VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2700;
		goto done;
	}
	// compound-ia_jcc[13](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_1(cond(cmp32_s[3](VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2701;
		goto done;
	}
	// compound-ia_jcc[13](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[3](VAR_1, VAR_0))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 0))) || var1 == get_irn_n(get_irn_n(node, 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 1))) || var0 == get_irn_n(get_irn_n(node, 0), 1))) {
		ir_node *f37_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f38_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f39_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f37_node, f38_node, false); set_ia32_ls_mode(f39_node, mode_Is);
ir_node *f40_node = new_bd_ia32_Jcc(dbgi, block, f39_node, 13);
new_node = f40_node;

		*rule = 2702;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// compound-ia_jcc[12](ia_cmp32(VAR_0, VAR_1)) 0 -> PROJ_1(cond(cmp32_s[3](VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 2710;
		goto done;
	}
	// compound-ia_jcc[12](ia_cmp32(VAR_0, VAR_1)) 1 -> PROJ_0(cond(cmp32_s[3](VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Cond(get_Proj_pred(node)) && is_Cmp(get_irn_n(get_Proj_pred(node), 0)) && get_Cmp_relation(get_irn_n(get_Proj_pred(node), 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(get_Proj_pred(node), 0))) == mode_Is && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 0), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 1);
		*rule = 2711;
		goto done;
	}
	// compound-ia_jcc[12](ia_cmp32(VAR_0, VAR_1)) -> cond(cmp32_s[3](VAR_1, VAR_0))
	if (is_Cond(node) && is_Cmp(get_irn_n(node, 0)) && get_Cmp_relation(get_irn_n(node, 0)) == 3 && get_irn_mode(get_Cmp_left(get_irn_n(node, 0))) == mode_Is && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 0))) || var1 == get_irn_n(get_irn_n(node, 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 1))) || var0 == get_irn_n(get_irn_n(node, 0), 1))) {
		ir_node *f33_node = is_ia32_Immediate(var0) ? var0 : be_transform_node(var0);
ir_node *f34_node = is_ia32_Immediate(var1) ? var1 : be_transform_node(var1);
ir_node *f35_node = new_bd_ia32_Cmp(dbgi, block, noreg_GP, noreg_GP, nomem, f33_node, f34_node, false); set_ia32_ls_mode(f35_node, mode_Is);
ir_node *f36_node = new_bd_ia32_Jcc(dbgi, block, f35_node, 12);
new_node = f36_node;

		*rule = 2712;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	// ia_incmem32_index 2 -> PROJ_0(store32(PROJ_0(load32(VAR_2, add32(VAR_0, VAR_1))), add32(VAR_0, VAR_1), add32(const32[1], PROJ_1(load32(VAR_2, add32(VAR_0, VAR_1))))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 2720;
		goto done;
	}
	// ia_incmem32_index -> store32(PROJ_0(load32(VAR_2, add32(VAR_0, VAR_1))), add32(VAR_0, VAR_1), add32(const32[1], PROJ_1(load32(VAR_2, add32(VAR_0, VAR_1)))))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 1))) || var1 == get_irn_n(get_irn_n(node, 1), 1)) && is_Add(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Const(get_irn_n(get_irn_n(node, 2), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 2), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(node, 2), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Proj(get_irn_n(get_irn_n(node, 2), 1)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 1)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 1)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1), 1))) {
		new_node = new_bd_ia32_IncMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 2721;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	// ia_incmem32_index 2 -> PROJ_0(store32(PROJ_0(load32(VAR_2, add32(VAR_1, VAR_0))), add32(VAR_1, VAR_0), add32(const32[1], PROJ_1(load32(VAR_2, add32(VAR_1, VAR_0))))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 2730;
		goto done;
	}
	// ia_incmem32_index -> store32(PROJ_0(load32(VAR_2, add32(VAR_1, VAR_0))), add32(VAR_1, VAR_0), add32(const32[1], PROJ_1(load32(VAR_2, add32(VAR_1, VAR_0)))))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 0))) || var1 == get_irn_n(get_irn_n(node, 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 1))) || var0 == get_irn_n(get_irn_n(node, 1), 1)) && is_Add(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Const(get_irn_n(get_irn_n(node, 2), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 2), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(node, 2), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Proj(get_irn_n(get_irn_n(node, 2), 1)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 1)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 1)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1), 1))) {
		new_node = new_bd_ia32_IncMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 2731;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	// ia_decmem32_index 2 -> PROJ_0(store32(PROJ_0(load32(VAR_2, add32(VAR_1, VAR_0))), add32(VAR_1, VAR_0), add32(const32[4294967295], PROJ_1(load32(VAR_2, add32(VAR_1, VAR_0))))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 2740;
		goto done;
	}
	// ia_decmem32_index -> store32(PROJ_0(load32(VAR_2, add32(VAR_1, VAR_0))), add32(VAR_1, VAR_0), add32(const32[4294967295], PROJ_1(load32(VAR_2, add32(VAR_1, VAR_0)))))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 0))) || var1 == get_irn_n(get_irn_n(node, 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 1))) || var0 == get_irn_n(get_irn_n(node, 1), 1)) && is_Add(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Const(get_irn_n(get_irn_n(node, 2), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 2), 0)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(node, 2), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Proj(get_irn_n(get_irn_n(node, 2), 1)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 1)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 1)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1), 1))) {
		new_node = new_bd_ia32_DecMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 2741;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	// ia_decmem32_index 2 -> PROJ_0(store32(PROJ_0(load32(VAR_2, add32(VAR_0, VAR_1))), add32(VAR_0, VAR_1), add32(const32[4294967295], PROJ_1(load32(VAR_2, add32(VAR_0, VAR_1))))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 2750;
		goto done;
	}
	// ia_decmem32_index -> store32(PROJ_0(load32(VAR_2, add32(VAR_0, VAR_1))), add32(VAR_0, VAR_1), add32(const32[4294967295], PROJ_1(load32(VAR_2, add32(VAR_0, VAR_1)))))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 1))) || var1 == get_irn_n(get_irn_n(node, 1), 1)) && is_Add(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Const(get_irn_n(get_irn_n(node, 2), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 2), 0)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(node, 2), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Proj(get_irn_n(get_irn_n(node, 2), 1)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 1)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 1)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1), 1))) {
		new_node = new_bd_ia32_DecMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 2751;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	var3 = NULL;
	// ia_addmem32_index 2 -> PROJ_0(store32(PROJ_0(load32(VAR_2, add32(VAR_1, VAR_0))), add32(VAR_1, VAR_0), add32(VAR_3, PROJ_1(load32(VAR_2, add32(VAR_1, VAR_0))))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && ((var3 == NULL && (var3 = get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) || var3 == get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 2760;
		goto done;
	}
	// ia_addmem32_index -> store32(PROJ_0(load32(VAR_2, add32(VAR_1, VAR_0))), add32(VAR_1, VAR_0), add32(VAR_3, PROJ_1(load32(VAR_2, add32(VAR_1, VAR_0)))))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 0))) || var1 == get_irn_n(get_irn_n(node, 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 1))) || var0 == get_irn_n(get_irn_n(node, 1), 1)) && is_Add(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && ((var3 == NULL && (var3 = get_irn_n(get_irn_n(node, 2), 0))) || var3 == get_irn_n(get_irn_n(node, 2), 0)) && is_Proj(get_irn_n(get_irn_n(node, 2), 1)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 1)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 1)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1), 1))) {
		new_node = new_bd_ia32_AddMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2), is_ia32_Immediate(var3) ? var3 : be_transform_node(var3)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 2761;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	var3 = NULL;
	// ia_addmem32_index 2 -> PROJ_0(store32(PROJ_0(load32(VAR_2, add32(VAR_0, VAR_1))), add32(VAR_0, VAR_1), add32(VAR_3, PROJ_1(load32(VAR_2, add32(VAR_0, VAR_1))))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && ((var3 == NULL && (var3 = get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) || var3 == get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 2770;
		goto done;
	}
	// ia_addmem32_index -> store32(PROJ_0(load32(VAR_2, add32(VAR_0, VAR_1))), add32(VAR_0, VAR_1), add32(VAR_3, PROJ_1(load32(VAR_2, add32(VAR_0, VAR_1)))))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 1))) || var1 == get_irn_n(get_irn_n(node, 1), 1)) && is_Add(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && ((var3 == NULL && (var3 = get_irn_n(get_irn_n(node, 2), 0))) || var3 == get_irn_n(get_irn_n(node, 2), 0)) && is_Proj(get_irn_n(get_irn_n(node, 2), 1)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 1)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 1)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1), 1))) {
		new_node = new_bd_ia32_AddMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2), is_ia32_Immediate(var3) ? var3 : be_transform_node(var3)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 2771;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_incmem32 2 -> PROJ_0(store32(PROJ_0(load32(VAR_1, VAR_0)), VAR_0, add32(const32[1], PROJ_1(load32(VAR_1, VAR_0)))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(node), 1))) || var0 == get_irn_n(get_Proj_pred(node), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 2780;
		goto done;
	}
	// ia_incmem32 -> store32(PROJ_0(load32(VAR_1, VAR_0)), VAR_0, add32(const32[1], PROJ_1(load32(VAR_1, VAR_0))))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1)) && is_Add(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Const(get_irn_n(get_irn_n(node, 2), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 2), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(node, 2), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Proj(get_irn_n(get_irn_n(node, 2), 1)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 1)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 1)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1))) {
		new_node = new_bd_ia32_IncMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), noreg_GP, is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 2781;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_decmem32 2 -> PROJ_0(store32(PROJ_0(load32(VAR_1, VAR_0)), VAR_0, add32(const32[4294967295], PROJ_1(load32(VAR_1, VAR_0)))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(node), 1))) || var0 == get_irn_n(get_Proj_pred(node), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 2790;
		goto done;
	}
	// ia_decmem32 -> store32(PROJ_0(load32(VAR_1, VAR_0)), VAR_0, add32(const32[4294967295], PROJ_1(load32(VAR_1, VAR_0))))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1)) && is_Add(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Const(get_irn_n(get_irn_n(node, 2), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 2), 0)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(node, 2), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Proj(get_irn_n(get_irn_n(node, 2), 1)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 1)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 1)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1))) {
		new_node = new_bd_ia32_DecMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), noreg_GP, is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 2791;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	// ia_addmem32 2 -> PROJ_0(store32(PROJ_0(load32(VAR_1, VAR_0)), VAR_0, add32(VAR_2, PROJ_1(load32(VAR_1, VAR_0)))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(node), 1))) || var0 == get_irn_n(get_Proj_pred(node), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && ((var2 == NULL && (var2 = get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) || var2 == get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 2800;
		goto done;
	}
	// ia_addmem32 -> store32(PROJ_0(load32(VAR_1, VAR_0)), VAR_0, add32(VAR_2, PROJ_1(load32(VAR_1, VAR_0))))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1)) && is_Add(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && ((var2 == NULL && (var2 = get_irn_n(get_irn_n(node, 2), 0))) || var2 == get_irn_n(get_irn_n(node, 2), 0)) && is_Proj(get_irn_n(get_irn_n(node, 2), 1)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 1)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 1)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1))) {
		new_node = new_bd_ia32_AddMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), noreg_GP, is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 2801;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	// ia_incmem32_index 2 -> PROJ_0(store32(PROJ_0(load32(VAR_2, add32(VAR_0, VAR_1))), add32(VAR_0, VAR_1), add32(PROJ_1(load32(VAR_2, add32(VAR_0, VAR_1))), const32[1])))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 2810;
		goto done;
	}
	// ia_incmem32_index -> store32(PROJ_0(load32(VAR_2, add32(VAR_0, VAR_1))), add32(VAR_0, VAR_1), add32(PROJ_1(load32(VAR_2, add32(VAR_0, VAR_1))), const32[1]))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 1))) || var1 == get_irn_n(get_irn_n(node, 1), 1)) && is_Add(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Proj(get_irn_n(get_irn_n(node, 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1)) && is_Const(get_irn_n(get_irn_n(node, 2), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 2), 1)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(node, 2), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 1)) == 1) {
		new_node = new_bd_ia32_IncMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 2811;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	// ia_incmem32_index 2 -> PROJ_0(store32(PROJ_0(load32(VAR_2, add32(VAR_1, VAR_0))), add32(VAR_1, VAR_0), add32(PROJ_1(load32(VAR_2, add32(VAR_1, VAR_0))), const32[1])))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 2820;
		goto done;
	}
	// ia_incmem32_index -> store32(PROJ_0(load32(VAR_2, add32(VAR_1, VAR_0))), add32(VAR_1, VAR_0), add32(PROJ_1(load32(VAR_2, add32(VAR_1, VAR_0))), const32[1]))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 0))) || var1 == get_irn_n(get_irn_n(node, 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 1))) || var0 == get_irn_n(get_irn_n(node, 1), 1)) && is_Add(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Proj(get_irn_n(get_irn_n(node, 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1)) && is_Const(get_irn_n(get_irn_n(node, 2), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 2), 1)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(node, 2), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 1)) == 1) {
		new_node = new_bd_ia32_IncMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 2821;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	// ia_decmem32_index 2 -> PROJ_0(store32(PROJ_0(load32(VAR_2, add32(VAR_1, VAR_0))), add32(VAR_1, VAR_0), add32(PROJ_1(load32(VAR_2, add32(VAR_1, VAR_0))), const32[4294967295])))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 2830;
		goto done;
	}
	// ia_decmem32_index -> store32(PROJ_0(load32(VAR_2, add32(VAR_1, VAR_0))), add32(VAR_1, VAR_0), add32(PROJ_1(load32(VAR_2, add32(VAR_1, VAR_0))), const32[4294967295]))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 0))) || var1 == get_irn_n(get_irn_n(node, 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 1))) || var0 == get_irn_n(get_irn_n(node, 1), 1)) && is_Add(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Proj(get_irn_n(get_irn_n(node, 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1)) && is_Const(get_irn_n(get_irn_n(node, 2), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 2), 1)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(node, 2), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 1)) == 1) {
		new_node = new_bd_ia32_DecMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 2831;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	// ia_decmem32_index 2 -> PROJ_0(store32(PROJ_0(load32(VAR_2, add32(VAR_0, VAR_1))), add32(VAR_0, VAR_1), add32(PROJ_1(load32(VAR_2, add32(VAR_0, VAR_1))), const32[4294967295])))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 2840;
		goto done;
	}
	// ia_decmem32_index -> store32(PROJ_0(load32(VAR_2, add32(VAR_0, VAR_1))), add32(VAR_0, VAR_1), add32(PROJ_1(load32(VAR_2, add32(VAR_0, VAR_1))), const32[4294967295]))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 1))) || var1 == get_irn_n(get_irn_n(node, 1), 1)) && is_Add(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Proj(get_irn_n(get_irn_n(node, 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1)) && is_Const(get_irn_n(get_irn_n(node, 2), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 2), 1)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(node, 2), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 1)) == 1) {
		new_node = new_bd_ia32_DecMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 2841;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	var3 = NULL;
	// ia_addmem32_index 2 -> PROJ_0(store32(PROJ_0(load32(VAR_2, add32(VAR_1, VAR_0))), add32(VAR_1, VAR_0), add32(PROJ_1(load32(VAR_2, add32(VAR_1, VAR_0))), VAR_3)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1)) && ((var3 == NULL && (var3 = get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) || var3 == get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 2850;
		goto done;
	}
	// ia_addmem32_index -> store32(PROJ_0(load32(VAR_2, add32(VAR_1, VAR_0))), add32(VAR_1, VAR_0), add32(PROJ_1(load32(VAR_2, add32(VAR_1, VAR_0))), VAR_3))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 0))) || var1 == get_irn_n(get_irn_n(node, 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 1))) || var0 == get_irn_n(get_irn_n(node, 1), 1)) && is_Add(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Proj(get_irn_n(get_irn_n(node, 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1)) && ((var3 == NULL && (var3 = get_irn_n(get_irn_n(node, 2), 1))) || var3 == get_irn_n(get_irn_n(node, 2), 1))) {
		new_node = new_bd_ia32_AddMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2), is_ia32_Immediate(var3) ? var3 : be_transform_node(var3)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 2851;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	var3 = NULL;
	// ia_addmem32_index 2 -> PROJ_0(store32(PROJ_0(load32(VAR_2, add32(VAR_0, VAR_1))), add32(VAR_0, VAR_1), add32(PROJ_1(load32(VAR_2, add32(VAR_0, VAR_1))), VAR_3)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1)) && ((var3 == NULL && (var3 = get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) || var3 == get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 2860;
		goto done;
	}
	// ia_addmem32_index -> store32(PROJ_0(load32(VAR_2, add32(VAR_0, VAR_1))), add32(VAR_0, VAR_1), add32(PROJ_1(load32(VAR_2, add32(VAR_0, VAR_1))), VAR_3))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 1))) || var1 == get_irn_n(get_irn_n(node, 1), 1)) && is_Add(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Proj(get_irn_n(get_irn_n(node, 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1)) && ((var3 == NULL && (var3 = get_irn_n(get_irn_n(node, 2), 1))) || var3 == get_irn_n(get_irn_n(node, 2), 1))) {
		new_node = new_bd_ia32_AddMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2), is_ia32_Immediate(var3) ? var3 : be_transform_node(var3)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 2861;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_incmem32 2 -> PROJ_0(store32(PROJ_0(load32(VAR_1, VAR_0)), VAR_0, add32(PROJ_1(load32(VAR_1, VAR_0)), const32[1])))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(node), 1))) || var0 == get_irn_n(get_Proj_pred(node), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 2870;
		goto done;
	}
	// ia_incmem32 -> store32(PROJ_0(load32(VAR_1, VAR_0)), VAR_0, add32(PROJ_1(load32(VAR_1, VAR_0)), const32[1]))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1)) && is_Add(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Proj(get_irn_n(get_irn_n(node, 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) && is_Const(get_irn_n(get_irn_n(node, 2), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 2), 1)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(node, 2), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 1)) == 1) {
		new_node = new_bd_ia32_IncMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), noreg_GP, is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 2871;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_decmem32 2 -> PROJ_0(store32(PROJ_0(load32(VAR_1, VAR_0)), VAR_0, add32(PROJ_1(load32(VAR_1, VAR_0)), const32[4294967295])))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(node), 1))) || var0 == get_irn_n(get_Proj_pred(node), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 2880;
		goto done;
	}
	// ia_decmem32 -> store32(PROJ_0(load32(VAR_1, VAR_0)), VAR_0, add32(PROJ_1(load32(VAR_1, VAR_0)), const32[4294967295]))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1)) && is_Add(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Proj(get_irn_n(get_irn_n(node, 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) && is_Const(get_irn_n(get_irn_n(node, 2), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 2), 1)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(node, 2), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 1)) == 1) {
		new_node = new_bd_ia32_DecMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), noreg_GP, is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 2881;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	// ia_addmem32 2 -> PROJ_0(store32(PROJ_0(load32(VAR_1, VAR_0)), VAR_0, add32(PROJ_1(load32(VAR_1, VAR_0)), VAR_2)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(node), 1))) || var0 == get_irn_n(get_Proj_pred(node), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) && ((var2 == NULL && (var2 = get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) || var2 == get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 2890;
		goto done;
	}
	// ia_addmem32 -> store32(PROJ_0(load32(VAR_1, VAR_0)), VAR_0, add32(PROJ_1(load32(VAR_1, VAR_0)), VAR_2))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1)) && is_Add(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Proj(get_irn_n(get_irn_n(node, 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) && ((var2 == NULL && (var2 = get_irn_n(get_irn_n(node, 2), 1))) || var2 == get_irn_n(get_irn_n(node, 2), 1))) {
		new_node = new_bd_ia32_AddMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), noreg_GP, is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 2891;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_and32_imm -1 -> and32(IMM_1, VAR_0)
	if (is_And(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && x86_match_immediate(&tmp_imm, get_irn_n(node, 0), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_And(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_commutative(new_node); set_ia32_ls_mode(new_node, get_irn_mode(node)); set_ia32_am_support(new_node, ia32_am_none);
		*rule = 2900;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_and32_imm -1 -> and32(VAR_0, IMM_1)
	if (is_And(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && x86_match_immediate(&tmp_imm, get_irn_n(node, 1), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm))) {
		new_node = new_bd_ia32_And(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_commutative(new_node); set_ia32_ls_mode(new_node, get_irn_mode(node)); set_ia32_am_support(new_node, ia32_am_none);
		*rule = 2910;
		goto done;
	}
	var0 = NULL;
	// ia_blsr32 -1 -> and32(VAR_0, eor32(minus32(VAR_0), VAR_0))
	if (is_And(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && is_Eor(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && is_Minus(get_irn_n(get_irn_n(node, 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 1))) || var0 == get_irn_n(get_irn_n(node, 1), 1))) {
		new_node = new_bd_ia32_Blsr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 2920;
		goto done;
	}
	var0 = NULL;
	// ia_blsr32 -1 -> and32(VAR_0, eor32(VAR_0, minus32(VAR_0)))
	if (is_And(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && is_Eor(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && is_Minus(get_irn_n(get_irn_n(node, 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0))) {
		new_node = new_bd_ia32_Blsr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 2930;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_btr32_imm -1 -> and32(VAR_0, eor32(VAR_0, shl32(const32[1], IMM_1)))
	if (is_And(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && is_Eor(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && is_Shl(get_irn_n(get_irn_n(node, 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 1)) == 1 && is_Const(get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0)) == 1 && x86_match_immediate(&tmp_imm, get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 1), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm))) {
		new_node = new_bd_ia32_Btr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 2940;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_btr32 -1 -> and32(VAR_0, eor32(VAR_0, shl32(const32[1], VAR_1)))
	if (is_And(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && is_Eor(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && is_Shl(get_irn_n(get_irn_n(node, 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 1)) == 1 && is_Const(get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 1))) {
		new_node = new_bd_ia32_Btr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 2950;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_btr32_imm -1 -> and32(VAR_0, eor32(shl32(const32[1], IMM_1), VAR_0))
	if (is_And(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && is_Eor(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && is_Shl(get_irn_n(get_irn_n(node, 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)) == 1 && x86_match_immediate(&tmp_imm, get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 1), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 1))) || var0 == get_irn_n(get_irn_n(node, 1), 1))) {
		new_node = new_bd_ia32_Btr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 2960;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_btr32 -1 -> and32(VAR_0, eor32(shl32(const32[1], VAR_1), VAR_0))
	if (is_And(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && is_Eor(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && is_Shl(get_irn_n(get_irn_n(node, 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 1)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 1))) || var0 == get_irn_n(get_irn_n(node, 1), 1))) {
		new_node = new_bd_ia32_Btr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 2970;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_andn32 -1 -> and32(VAR_1, eor32(VAR_1, VAR_0))
	if (is_And(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var1 == NULL && (var1 = get_irn_n(node, 0))) || var1 == get_irn_n(node, 0)) && is_Eor(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 0))) || var1 == get_irn_n(get_irn_n(node, 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 1))) || var0 == get_irn_n(get_irn_n(node, 1), 1))) {
		new_node = new_bd_ia32_Andn(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 2980;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_andn32 -1 -> and32(VAR_1, eor32(VAR_0, VAR_1))
	if (is_And(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var1 == NULL && (var1 = get_irn_n(node, 0))) || var1 == get_irn_n(node, 0)) && is_Eor(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 1))) || var1 == get_irn_n(get_irn_n(node, 1), 1))) {
		new_node = new_bd_ia32_Andn(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 2990;
		goto done;
	}
	var0 = NULL;
	// ia_blsr32 -1 -> and32(eor32(minus32(VAR_0), VAR_0), VAR_0)
	if (is_And(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Eor(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Minus(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 1))) || var0 == get_irn_n(get_irn_n(node, 0), 1)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Blsr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3000;
		goto done;
	}
	var0 = NULL;
	// ia_blsr32 -1 -> and32(eor32(VAR_0, minus32(VAR_0)), VAR_0)
	if (is_And(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Eor(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && is_Minus(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Blsr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3010;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_btr32_imm -1 -> and32(eor32(shl32(const32[1], IMM_1), VAR_0), VAR_0)
	if (is_And(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Eor(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Shl(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == 1 && x86_match_immediate(&tmp_imm, get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 1))) || var0 == get_irn_n(get_irn_n(node, 0), 1)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Btr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3020;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_btr32 -1 -> and32(eor32(shl32(const32[1], VAR_1), VAR_0), VAR_0)
	if (is_And(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Eor(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Shl(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 1))) || var0 == get_irn_n(get_irn_n(node, 0), 1)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Btr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3030;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_btr32_imm -1 -> and32(eor32(VAR_0, shl32(const32[1], IMM_1)), VAR_0)
	if (is_And(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Eor(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && is_Shl(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && is_Const(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == 1 && x86_match_immediate(&tmp_imm, get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Btr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3040;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_btr32 -1 -> and32(eor32(VAR_0, shl32(const32[1], VAR_1)), VAR_0)
	if (is_And(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Eor(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && is_Shl(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && is_Const(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Btr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3050;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_andn32 -1 -> and32(eor32(VAR_0, VAR_1), VAR_1)
	if (is_And(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Eor(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 1))) || var1 == get_irn_n(get_irn_n(node, 0), 1)) && ((var1 == NULL && (var1 = get_irn_n(node, 1))) || var1 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Andn(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3060;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_andn32 -1 -> and32(eor32(VAR_1, VAR_0), VAR_1)
	if (is_And(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Eor(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 0))) || var1 == get_irn_n(get_irn_n(node, 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 1))) || var0 == get_irn_n(get_irn_n(node, 0), 1)) && ((var1 == NULL && (var1 = get_irn_n(node, 1))) || var1 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Andn(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3070;
		goto done;
	}
	var0 = NULL;
	// ia_blsr32 -1 -> and32(not32(minus32(VAR_0)), VAR_0)
	if (is_And(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Not(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Minus(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Blsr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3080;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_btr32_imm -1 -> and32(not32(shl32(const32[1], IMM_1)), VAR_0)
	if (is_And(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Not(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Shl(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == 1 && x86_match_immediate(&tmp_imm, get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Btr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3090;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_btr32 -1 -> and32(not32(shl32(const32[1], VAR_1)), VAR_0)
	if (is_And(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Not(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Shl(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Btr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3100;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_andn32 -1 -> and32(not32(VAR_0), VAR_1)
	if (is_And(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Not(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(node, 1))) || var1 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Andn(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3110;
		goto done;
	}
	var0 = NULL;
	// ia_blsr32 -1 -> and32(VAR_0, not32(minus32(VAR_0)))
	if (is_And(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && is_Not(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && is_Minus(get_irn_n(get_irn_n(node, 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0))) {
		new_node = new_bd_ia32_Blsr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3120;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_btr32_imm -1 -> and32(VAR_0, not32(shl32(const32[1], IMM_1)))
	if (is_And(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && is_Not(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && is_Shl(get_irn_n(get_irn_n(node, 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)) == 1 && x86_match_immediate(&tmp_imm, get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 1), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm))) {
		new_node = new_bd_ia32_Btr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3130;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_btr32 -1 -> and32(VAR_0, not32(shl32(const32[1], VAR_1)))
	if (is_And(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && is_Not(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && is_Shl(get_irn_n(get_irn_n(node, 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 1))) {
		new_node = new_bd_ia32_Btr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3140;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_andn32 -1 -> and32(VAR_1, not32(VAR_0))
	if (is_And(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var1 == NULL && (var1 = get_irn_n(node, 0))) || var1 == get_irn_n(node, 0)) && is_Not(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0))) {
		new_node = new_bd_ia32_Andn(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3150;
		goto done;
	}
	var0 = NULL;
	// ia_blsi32 -1 -> and32(minus32(VAR_0), VAR_0)
	if (is_And(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Minus(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Blsi(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3160;
		goto done;
	}
	var0 = NULL;
	// ia_blsi32 -1 -> and32(VAR_0, minus32(VAR_0))
	if (is_And(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && is_Minus(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0))) {
		new_node = new_bd_ia32_Blsi(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3170;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_btr32_imm -1 -> and32(VAR_0, add32(const32[4294967295], shl32(const32[4294967295], IMM_1)))
	if (is_And(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && is_Const(get_irn_n(get_irn_n(node, 1), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 1), 0)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 0)) == 2 && is_Shl(get_irn_n(get_irn_n(node, 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 1)) == 1 && is_Const(get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0)) == 2 && x86_match_immediate(&tmp_imm, get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 1), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm))) {
		new_node = new_bd_ia32_Btr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3180;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_btr32 -1 -> and32(VAR_0, add32(const32[4294967295], shl32(const32[4294967295], VAR_1)))
	if (is_And(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && is_Const(get_irn_n(get_irn_n(node, 1), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 1), 0)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 0)) == 2 && is_Shl(get_irn_n(get_irn_n(node, 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 1)) == 1 && is_Const(get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 1))) {
		new_node = new_bd_ia32_Btr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3190;
		goto done;
	}
	var0 = NULL;
	// ia_blsr32 -1 -> and32(VAR_0, add32(const32[4294967295], VAR_0))
	if (is_And(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && is_Const(get_irn_n(get_irn_n(node, 1), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 1), 0)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 1))) || var0 == get_irn_n(get_irn_n(node, 1), 1))) {
		new_node = new_bd_ia32_Blsr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3200;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_btr32_imm -1 -> and32(VAR_0, add32(shl32(const32[4294967295], IMM_1), const32[4294967295]))
	if (is_And(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && is_Shl(get_irn_n(get_irn_n(node, 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)) == 2 && x86_match_immediate(&tmp_imm, get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 1), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm)) && is_Const(get_irn_n(get_irn_n(node, 1), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 1), 1)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 1)) == 2) {
		new_node = new_bd_ia32_Btr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3210;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_btr32 -1 -> and32(VAR_0, add32(shl32(const32[4294967295], VAR_1), const32[4294967295]))
	if (is_And(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && is_Shl(get_irn_n(get_irn_n(node, 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 1)) && is_Const(get_irn_n(get_irn_n(node, 1), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 1), 1)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 1)) == 2) {
		new_node = new_bd_ia32_Btr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3220;
		goto done;
	}
	var0 = NULL;
	// ia_blsr32 -1 -> and32(VAR_0, add32(VAR_0, const32[4294967295]))
	if (is_And(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && is_Const(get_irn_n(get_irn_n(node, 1), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 1), 1)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 1)) == 1) {
		new_node = new_bd_ia32_Blsr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3230;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_btr32_imm -1 -> and32(add32(shl32(const32[4294967295], IMM_1), const32[4294967295]), VAR_0)
	if (is_And(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Add(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Shl(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == 2 && x86_match_immediate(&tmp_imm, get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm)) && is_Const(get_irn_n(get_irn_n(node, 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 1)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Btr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3240;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_btr32 -1 -> and32(add32(shl32(const32[4294967295], VAR_1), const32[4294967295]), VAR_0)
	if (is_And(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Add(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Shl(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && is_Const(get_irn_n(get_irn_n(node, 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 1)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Btr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3250;
		goto done;
	}
	var0 = NULL;
	// ia_blsr32 -1 -> and32(add32(VAR_0, const32[4294967295]), VAR_0)
	if (is_And(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Add(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && is_Const(get_irn_n(get_irn_n(node, 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 1)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Blsr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3260;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_btr32_imm -1 -> and32(add32(const32[4294967295], shl32(const32[4294967295], IMM_1)), VAR_0)
	if (is_And(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Add(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Const(get_irn_n(get_irn_n(node, 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 0)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 2 && is_Shl(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && is_Const(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == 2 && x86_match_immediate(&tmp_imm, get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Btr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3270;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_btr32 -1 -> and32(add32(const32[4294967295], shl32(const32[4294967295], VAR_1)), VAR_0)
	if (is_And(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Add(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Const(get_irn_n(get_irn_n(node, 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 0)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 2 && is_Shl(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && is_Const(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Btr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3280;
		goto done;
	}
	var0 = NULL;
	// ia_blsr32 -1 -> and32(add32(const32[4294967295], VAR_0), VAR_0)
	if (is_And(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Add(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Const(get_irn_n(get_irn_n(node, 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 0)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 1))) || var0 == get_irn_n(get_irn_n(node, 0), 1)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Blsr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3290;
		goto done;
	}
	var0 = NULL;
	// ia_blsr32 -1 -> and32(VAR_0, sub32(VAR_0, const32[1]))
	if (is_And(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && is_Sub(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && is_Const(get_irn_n(get_irn_n(node, 1), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 1), 1)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 1)) == 1) {
		new_node = new_bd_ia32_Blsr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3300;
		goto done;
	}
	var0 = NULL;
	// ia_blsr32 -1 -> and32(sub32(VAR_0, const32[1]), VAR_0)
	if (is_And(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Sub(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && is_Const(get_irn_n(get_irn_n(node, 0), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 1)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Blsr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3310;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_and32 -1 -> and32(VAR_0, VAR_1)
	if (is_And(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && ((var1 == NULL && (var1 = get_irn_n(node, 1))) || var1 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_And(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_commutative(new_node); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3320;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_and32 -1 -> and32(VAR_1, VAR_0)
	if (is_And(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var1 == NULL && (var1 = get_irn_n(node, 0))) || var1 == get_irn_n(node, 0)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_And(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_commutative(new_node); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3330;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	var3 = NULL;
	// ia_andmem32_index 2 -> PROJ_0(store32(PROJ_0(load32(VAR_2, add32(VAR_1, VAR_0))), add32(VAR_1, VAR_0), and32(PROJ_1(load32(VAR_2, add32(VAR_1, VAR_0))), VAR_3)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1)) && is_And(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1)) && ((var3 == NULL && (var3 = get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) || var3 == get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 3340;
		goto done;
	}
	// ia_andmem32_index -> store32(PROJ_0(load32(VAR_2, add32(VAR_1, VAR_0))), add32(VAR_1, VAR_0), and32(PROJ_1(load32(VAR_2, add32(VAR_1, VAR_0))), VAR_3))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 0))) || var1 == get_irn_n(get_irn_n(node, 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 1))) || var0 == get_irn_n(get_irn_n(node, 1), 1)) && is_And(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Proj(get_irn_n(get_irn_n(node, 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1)) && ((var3 == NULL && (var3 = get_irn_n(get_irn_n(node, 2), 1))) || var3 == get_irn_n(get_irn_n(node, 2), 1))) {
		new_node = new_bd_ia32_AndMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2), is_ia32_Immediate(var3) ? var3 : be_transform_node(var3)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 3341;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	var3 = NULL;
	// ia_andmem32_index 2 -> PROJ_0(store32(PROJ_0(load32(VAR_2, add32(VAR_0, VAR_1))), add32(VAR_0, VAR_1), and32(PROJ_1(load32(VAR_2, add32(VAR_0, VAR_1))), VAR_3)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1)) && is_And(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1)) && ((var3 == NULL && (var3 = get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) || var3 == get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 3350;
		goto done;
	}
	// ia_andmem32_index -> store32(PROJ_0(load32(VAR_2, add32(VAR_0, VAR_1))), add32(VAR_0, VAR_1), and32(PROJ_1(load32(VAR_2, add32(VAR_0, VAR_1))), VAR_3))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 1))) || var1 == get_irn_n(get_irn_n(node, 1), 1)) && is_And(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Proj(get_irn_n(get_irn_n(node, 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1)) && ((var3 == NULL && (var3 = get_irn_n(get_irn_n(node, 2), 1))) || var3 == get_irn_n(get_irn_n(node, 2), 1))) {
		new_node = new_bd_ia32_AndMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2), is_ia32_Immediate(var3) ? var3 : be_transform_node(var3)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 3351;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	// ia_andmem32 2 -> PROJ_0(store32(PROJ_0(load32(VAR_1, VAR_0)), VAR_0, and32(PROJ_1(load32(VAR_1, VAR_0)), VAR_2)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(node), 1))) || var0 == get_irn_n(get_Proj_pred(node), 1)) && is_And(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) && ((var2 == NULL && (var2 = get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) || var2 == get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 3360;
		goto done;
	}
	// ia_andmem32 -> store32(PROJ_0(load32(VAR_1, VAR_0)), VAR_0, and32(PROJ_1(load32(VAR_1, VAR_0)), VAR_2))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1)) && is_And(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Proj(get_irn_n(get_irn_n(node, 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) && ((var2 == NULL && (var2 = get_irn_n(get_irn_n(node, 2), 1))) || var2 == get_irn_n(get_irn_n(node, 2), 1))) {
		new_node = new_bd_ia32_AndMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), noreg_GP, is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 3361;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	var3 = NULL;
	// ia_andmem32_index 2 -> PROJ_0(store32(PROJ_0(load32(VAR_2, add32(VAR_1, VAR_0))), add32(VAR_1, VAR_0), and32(VAR_3, PROJ_1(load32(VAR_2, add32(VAR_1, VAR_0))))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1)) && is_And(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && ((var3 == NULL && (var3 = get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) || var3 == get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 3370;
		goto done;
	}
	// ia_andmem32_index -> store32(PROJ_0(load32(VAR_2, add32(VAR_1, VAR_0))), add32(VAR_1, VAR_0), and32(VAR_3, PROJ_1(load32(VAR_2, add32(VAR_1, VAR_0)))))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 0))) || var1 == get_irn_n(get_irn_n(node, 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 1))) || var0 == get_irn_n(get_irn_n(node, 1), 1)) && is_And(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && ((var3 == NULL && (var3 = get_irn_n(get_irn_n(node, 2), 0))) || var3 == get_irn_n(get_irn_n(node, 2), 0)) && is_Proj(get_irn_n(get_irn_n(node, 2), 1)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 1)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 1)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1), 1))) {
		new_node = new_bd_ia32_AndMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2), is_ia32_Immediate(var3) ? var3 : be_transform_node(var3)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 3371;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	var3 = NULL;
	// ia_andmem32_index 2 -> PROJ_0(store32(PROJ_0(load32(VAR_2, add32(VAR_0, VAR_1))), add32(VAR_0, VAR_1), and32(VAR_3, PROJ_1(load32(VAR_2, add32(VAR_0, VAR_1))))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1)) && is_And(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && ((var3 == NULL && (var3 = get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) || var3 == get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 3380;
		goto done;
	}
	// ia_andmem32_index -> store32(PROJ_0(load32(VAR_2, add32(VAR_0, VAR_1))), add32(VAR_0, VAR_1), and32(VAR_3, PROJ_1(load32(VAR_2, add32(VAR_0, VAR_1)))))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 1))) || var1 == get_irn_n(get_irn_n(node, 1), 1)) && is_And(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && ((var3 == NULL && (var3 = get_irn_n(get_irn_n(node, 2), 0))) || var3 == get_irn_n(get_irn_n(node, 2), 0)) && is_Proj(get_irn_n(get_irn_n(node, 2), 1)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 1)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 1)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1), 1))) {
		new_node = new_bd_ia32_AndMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2), is_ia32_Immediate(var3) ? var3 : be_transform_node(var3)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 3381;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	// ia_andmem32 2 -> PROJ_0(store32(PROJ_0(load32(VAR_1, VAR_0)), VAR_0, and32(VAR_2, PROJ_1(load32(VAR_1, VAR_0)))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(node), 1))) || var0 == get_irn_n(get_Proj_pred(node), 1)) && is_And(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && ((var2 == NULL && (var2 = get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) || var2 == get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 3390;
		goto done;
	}
	// ia_andmem32 -> store32(PROJ_0(load32(VAR_1, VAR_0)), VAR_0, and32(VAR_2, PROJ_1(load32(VAR_1, VAR_0))))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1)) && is_And(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && ((var2 == NULL && (var2 = get_irn_n(get_irn_n(node, 2), 0))) || var2 == get_irn_n(get_irn_n(node, 2), 0)) && is_Proj(get_irn_n(get_irn_n(node, 2), 1)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 1)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 1)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1))) {
		new_node = new_bd_ia32_AndMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), noreg_GP, is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 3391;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_or32_imm -1 -> or32(VAR_0, IMM_1)
	if (is_Or(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && x86_match_immediate(&tmp_imm, get_irn_n(node, 1), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm))) {
		new_node = new_bd_ia32_Or(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_commutative(new_node); set_ia32_ls_mode(new_node, get_irn_mode(node)); set_ia32_am_support(new_node, ia32_am_none);
		*rule = 3400;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_or32_imm -1 -> or32(IMM_1, VAR_0)
	if (is_Or(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && x86_match_immediate(&tmp_imm, get_irn_n(node, 0), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Or(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_commutative(new_node); set_ia32_ls_mode(new_node, get_irn_mode(node)); set_ia32_am_support(new_node, ia32_am_none);
		*rule = 3410;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_rol32_imm -1 -> or32(shl32(VAR_0, IMM_1), shr32(VAR_0, minus32(IMM_1)))
	if (is_Or(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Shl(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && x86_match_immediate(&tmp_imm, get_irn_n(get_irn_n(node, 0), 1), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm)) && is_Shr(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && is_Minus(get_irn_n(get_irn_n(node, 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 1)) == 1 && x86_match_immediate(&tmp_imm, get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm))) {
		new_node = new_bd_ia32_Rol(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1));
		*rule = 3420;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_rol32 -1 -> or32(shl32(VAR_0, VAR_1), shr32(VAR_0, minus32(VAR_1)))
	if (is_Or(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Shl(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 1))) || var1 == get_irn_n(get_irn_n(node, 0), 1)) && is_Shr(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && is_Minus(get_irn_n(get_irn_n(node, 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0))) {
		new_node = new_bd_ia32_Rol(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1));
		*rule = 3430;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_rol32_imm -1 -> or32(shr32(VAR_0, minus32(IMM_1)), shl32(VAR_0, IMM_1))
	if (is_Or(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Shr(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && is_Minus(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && x86_match_immediate(&tmp_imm, get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm)) && is_Shl(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && x86_match_immediate(&tmp_imm, get_irn_n(get_irn_n(node, 1), 1), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm))) {
		new_node = new_bd_ia32_Rol(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1));
		*rule = 3440;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_rol32 -1 -> or32(shr32(VAR_0, minus32(VAR_1)), shl32(VAR_0, VAR_1))
	if (is_Or(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Shr(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && is_Minus(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && is_Shl(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 1))) || var1 == get_irn_n(get_irn_n(node, 1), 1))) {
		new_node = new_bd_ia32_Rol(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1));
		*rule = 3450;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_ror32_imm -1 -> or32(shr32(VAR_0, IMM_1), shl32(VAR_0, minus32(IMM_1)))
	if (is_Or(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Shr(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && x86_match_immediate(&tmp_imm, get_irn_n(get_irn_n(node, 0), 1), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm)) && is_Shl(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && is_Minus(get_irn_n(get_irn_n(node, 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 1)) == 1 && x86_match_immediate(&tmp_imm, get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm))) {
		new_node = new_bd_ia32_Ror(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1));
		*rule = 3460;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_ror32 -1 -> or32(shr32(VAR_0, VAR_1), shl32(VAR_0, minus32(VAR_1)))
	if (is_Or(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Shr(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 1))) || var1 == get_irn_n(get_irn_n(node, 0), 1)) && is_Shl(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && is_Minus(get_irn_n(get_irn_n(node, 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0))) {
		new_node = new_bd_ia32_Ror(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1));
		*rule = 3470;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_ror32_imm -1 -> or32(shl32(VAR_0, minus32(IMM_1)), shr32(VAR_0, IMM_1))
	if (is_Or(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Shl(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && is_Minus(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && x86_match_immediate(&tmp_imm, get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm)) && is_Shr(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && x86_match_immediate(&tmp_imm, get_irn_n(get_irn_n(node, 1), 1), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm))) {
		new_node = new_bd_ia32_Ror(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1));
		*rule = 3480;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_ror32 -1 -> or32(shl32(VAR_0, minus32(VAR_1)), shr32(VAR_0, VAR_1))
	if (is_Or(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Shl(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && is_Minus(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && is_Shr(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 1))) || var1 == get_irn_n(get_irn_n(node, 1), 1))) {
		new_node = new_bd_ia32_Ror(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1));
		*rule = 3490;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_bts32_imm -1 -> or32(shl32(const32[1], IMM_1), VAR_0)
	if (is_Or(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Shl(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Const(get_irn_n(get_irn_n(node, 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && x86_match_immediate(&tmp_imm, get_irn_n(get_irn_n(node, 0), 1), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Bts(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3500;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_bts32 -1 -> or32(shl32(const32[1], VAR_1), VAR_0)
	if (is_Or(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Shl(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Const(get_irn_n(get_irn_n(node, 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 1))) || var1 == get_irn_n(get_irn_n(node, 0), 1)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Bts(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3510;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_bts32_imm -1 -> or32(VAR_0, shl32(const32[1], IMM_1))
	if (is_Or(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && is_Shl(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && is_Const(get_irn_n(get_irn_n(node, 1), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 1), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 0)) == 1 && x86_match_immediate(&tmp_imm, get_irn_n(get_irn_n(node, 1), 1), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm))) {
		new_node = new_bd_ia32_Bts(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3520;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_bts32 -1 -> or32(VAR_0, shl32(const32[1], VAR_1))
	if (is_Or(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && is_Shl(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && is_Const(get_irn_n(get_irn_n(node, 1), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 1), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 1))) || var1 == get_irn_n(get_irn_n(node, 1), 1))) {
		new_node = new_bd_ia32_Bts(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3530;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_or32 -1 -> or32(VAR_1, VAR_0)
	if (is_Or(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var1 == NULL && (var1 = get_irn_n(node, 0))) || var1 == get_irn_n(node, 0)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Or(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_commutative(new_node); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3540;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_or32 -1 -> or32(VAR_0, VAR_1)
	if (is_Or(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && ((var1 == NULL && (var1 = get_irn_n(node, 1))) || var1 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Or(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_commutative(new_node); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3550;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	var3 = NULL;
	// ia_ormem32_index 2 -> PROJ_0(store32(PROJ_0(load32(VAR_2, add32(VAR_1, VAR_0))), add32(VAR_1, VAR_0), or32(VAR_3, PROJ_1(load32(VAR_2, add32(VAR_1, VAR_0))))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1)) && is_Or(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && ((var3 == NULL && (var3 = get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) || var3 == get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 3560;
		goto done;
	}
	// ia_ormem32_index -> store32(PROJ_0(load32(VAR_2, add32(VAR_1, VAR_0))), add32(VAR_1, VAR_0), or32(VAR_3, PROJ_1(load32(VAR_2, add32(VAR_1, VAR_0)))))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 0))) || var1 == get_irn_n(get_irn_n(node, 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 1))) || var0 == get_irn_n(get_irn_n(node, 1), 1)) && is_Or(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && ((var3 == NULL && (var3 = get_irn_n(get_irn_n(node, 2), 0))) || var3 == get_irn_n(get_irn_n(node, 2), 0)) && is_Proj(get_irn_n(get_irn_n(node, 2), 1)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 1)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 1)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1), 1))) {
		new_node = new_bd_ia32_OrMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2), is_ia32_Immediate(var3) ? var3 : be_transform_node(var3)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 3561;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	var3 = NULL;
	// ia_ormem32_index 2 -> PROJ_0(store32(PROJ_0(load32(VAR_2, add32(VAR_0, VAR_1))), add32(VAR_0, VAR_1), or32(VAR_3, PROJ_1(load32(VAR_2, add32(VAR_0, VAR_1))))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1)) && is_Or(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && ((var3 == NULL && (var3 = get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) || var3 == get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 3570;
		goto done;
	}
	// ia_ormem32_index -> store32(PROJ_0(load32(VAR_2, add32(VAR_0, VAR_1))), add32(VAR_0, VAR_1), or32(VAR_3, PROJ_1(load32(VAR_2, add32(VAR_0, VAR_1)))))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 1))) || var1 == get_irn_n(get_irn_n(node, 1), 1)) && is_Or(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && ((var3 == NULL && (var3 = get_irn_n(get_irn_n(node, 2), 0))) || var3 == get_irn_n(get_irn_n(node, 2), 0)) && is_Proj(get_irn_n(get_irn_n(node, 2), 1)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 1)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 1)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1), 1))) {
		new_node = new_bd_ia32_OrMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2), is_ia32_Immediate(var3) ? var3 : be_transform_node(var3)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 3571;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	// ia_ormem32 2 -> PROJ_0(store32(PROJ_0(load32(VAR_1, VAR_0)), VAR_0, or32(VAR_2, PROJ_1(load32(VAR_1, VAR_0)))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(node), 1))) || var0 == get_irn_n(get_Proj_pred(node), 1)) && is_Or(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && ((var2 == NULL && (var2 = get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) || var2 == get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 3580;
		goto done;
	}
	// ia_ormem32 -> store32(PROJ_0(load32(VAR_1, VAR_0)), VAR_0, or32(VAR_2, PROJ_1(load32(VAR_1, VAR_0))))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1)) && is_Or(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && ((var2 == NULL && (var2 = get_irn_n(get_irn_n(node, 2), 0))) || var2 == get_irn_n(get_irn_n(node, 2), 0)) && is_Proj(get_irn_n(get_irn_n(node, 2), 1)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 1)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 1)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1))) {
		new_node = new_bd_ia32_OrMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), noreg_GP, is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 3581;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	var3 = NULL;
	// ia_ormem32_index 2 -> PROJ_0(store32(PROJ_0(load32(VAR_2, add32(VAR_0, VAR_1))), add32(VAR_0, VAR_1), or32(PROJ_1(load32(VAR_2, add32(VAR_0, VAR_1))), VAR_3)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1)) && is_Or(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1)) && ((var3 == NULL && (var3 = get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) || var3 == get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 3590;
		goto done;
	}
	// ia_ormem32_index -> store32(PROJ_0(load32(VAR_2, add32(VAR_0, VAR_1))), add32(VAR_0, VAR_1), or32(PROJ_1(load32(VAR_2, add32(VAR_0, VAR_1))), VAR_3))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 1))) || var1 == get_irn_n(get_irn_n(node, 1), 1)) && is_Or(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Proj(get_irn_n(get_irn_n(node, 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1)) && ((var3 == NULL && (var3 = get_irn_n(get_irn_n(node, 2), 1))) || var3 == get_irn_n(get_irn_n(node, 2), 1))) {
		new_node = new_bd_ia32_OrMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2), is_ia32_Immediate(var3) ? var3 : be_transform_node(var3)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 3591;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	var3 = NULL;
	// ia_ormem32_index 2 -> PROJ_0(store32(PROJ_0(load32(VAR_2, add32(VAR_1, VAR_0))), add32(VAR_1, VAR_0), or32(PROJ_1(load32(VAR_2, add32(VAR_1, VAR_0))), VAR_3)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1)) && is_Or(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1)) && ((var3 == NULL && (var3 = get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) || var3 == get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 3600;
		goto done;
	}
	// ia_ormem32_index -> store32(PROJ_0(load32(VAR_2, add32(VAR_1, VAR_0))), add32(VAR_1, VAR_0), or32(PROJ_1(load32(VAR_2, add32(VAR_1, VAR_0))), VAR_3))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 0))) || var1 == get_irn_n(get_irn_n(node, 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 1))) || var0 == get_irn_n(get_irn_n(node, 1), 1)) && is_Or(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Proj(get_irn_n(get_irn_n(node, 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1)) && ((var3 == NULL && (var3 = get_irn_n(get_irn_n(node, 2), 1))) || var3 == get_irn_n(get_irn_n(node, 2), 1))) {
		new_node = new_bd_ia32_OrMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2), is_ia32_Immediate(var3) ? var3 : be_transform_node(var3)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 3601;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	// ia_ormem32 2 -> PROJ_0(store32(PROJ_0(load32(VAR_1, VAR_0)), VAR_0, or32(PROJ_1(load32(VAR_1, VAR_0)), VAR_2)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(node), 1))) || var0 == get_irn_n(get_Proj_pred(node), 1)) && is_Or(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) && ((var2 == NULL && (var2 = get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) || var2 == get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 3610;
		goto done;
	}
	// ia_ormem32 -> store32(PROJ_0(load32(VAR_1, VAR_0)), VAR_0, or32(PROJ_1(load32(VAR_1, VAR_0)), VAR_2))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1)) && is_Or(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Proj(get_irn_n(get_irn_n(node, 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) && ((var2 == NULL && (var2 = get_irn_n(get_irn_n(node, 2), 1))) || var2 == get_irn_n(get_irn_n(node, 2), 1))) {
		new_node = new_bd_ia32_OrMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), noreg_GP, is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 3611;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_xor32_imm -1 -> eor32(VAR_0, IMM_1)
	if (is_Eor(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && x86_match_immediate(&tmp_imm, get_irn_n(node, 1), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm))) {
		new_node = new_bd_ia32_Xor(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_commutative(new_node); set_ia32_ls_mode(new_node, get_irn_mode(node)); set_ia32_am_support(new_node, ia32_am_none);
		*rule = 3620;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_xor32_imm -1 -> eor32(IMM_1, VAR_0)
	if (is_Eor(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && x86_match_immediate(&tmp_imm, get_irn_n(node, 0), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Xor(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_commutative(new_node); set_ia32_ls_mode(new_node, get_irn_mode(node)); set_ia32_am_support(new_node, ia32_am_none);
		*rule = 3630;
		goto done;
	}
	var0 = NULL;
	// ia_blsr32 -1 -> eor32(and32(VAR_0, minus32(VAR_0)), VAR_0)
	if (is_Eor(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_And(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && is_Minus(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Blsr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3640;
		goto done;
	}
	var0 = NULL;
	// ia_blsr32 -1 -> eor32(and32(minus32(VAR_0), VAR_0), VAR_0)
	if (is_Eor(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_And(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Minus(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 1))) || var0 == get_irn_n(get_irn_n(node, 0), 1)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Blsr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3650;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_btr32_imm -1 -> eor32(and32(shl32(const32[1], IMM_1), VAR_0), VAR_0)
	if (is_Eor(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_And(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Shl(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == 1 && x86_match_immediate(&tmp_imm, get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 1))) || var0 == get_irn_n(get_irn_n(node, 0), 1)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Btr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3660;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_btr32 -1 -> eor32(and32(shl32(const32[1], VAR_1), VAR_0), VAR_0)
	if (is_Eor(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_And(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Shl(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 1))) || var0 == get_irn_n(get_irn_n(node, 0), 1)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Btr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3670;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_btr32_imm -1 -> eor32(and32(VAR_0, shl32(const32[1], IMM_1)), VAR_0)
	if (is_Eor(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_And(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && is_Shl(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && is_Const(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == 1 && x86_match_immediate(&tmp_imm, get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Btr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3680;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_btr32 -1 -> eor32(and32(VAR_0, shl32(const32[1], VAR_1)), VAR_0)
	if (is_Eor(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_And(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && is_Shl(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && is_Const(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Btr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3690;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_andn32 -1 -> eor32(and32(VAR_0, VAR_1), VAR_1)
	if (is_Eor(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_And(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 1))) || var1 == get_irn_n(get_irn_n(node, 0), 1)) && ((var1 == NULL && (var1 = get_irn_n(node, 1))) || var1 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Andn(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3700;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_andn32 -1 -> eor32(and32(VAR_1, VAR_0), VAR_1)
	if (is_Eor(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_And(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 0))) || var1 == get_irn_n(get_irn_n(node, 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 1))) || var0 == get_irn_n(get_irn_n(node, 0), 1)) && ((var1 == NULL && (var1 = get_irn_n(node, 1))) || var1 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Andn(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3710;
		goto done;
	}
	var0 = NULL;
	// ia_blsr32 -1 -> eor32(VAR_0, and32(minus32(VAR_0), VAR_0))
	if (is_Eor(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && is_And(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && is_Minus(get_irn_n(get_irn_n(node, 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 1))) || var0 == get_irn_n(get_irn_n(node, 1), 1))) {
		new_node = new_bd_ia32_Blsr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3720;
		goto done;
	}
	var0 = NULL;
	// ia_blsr32 -1 -> eor32(VAR_0, and32(VAR_0, minus32(VAR_0)))
	if (is_Eor(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && is_And(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && is_Minus(get_irn_n(get_irn_n(node, 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0))) {
		new_node = new_bd_ia32_Blsr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3730;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_btr32_imm -1 -> eor32(VAR_0, and32(shl32(const32[1], IMM_1), VAR_0))
	if (is_Eor(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && is_And(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && is_Shl(get_irn_n(get_irn_n(node, 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)) == 1 && x86_match_immediate(&tmp_imm, get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 1), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 1))) || var0 == get_irn_n(get_irn_n(node, 1), 1))) {
		new_node = new_bd_ia32_Btr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3740;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_btr32 -1 -> eor32(VAR_0, and32(shl32(const32[1], VAR_1), VAR_0))
	if (is_Eor(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && is_And(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && is_Shl(get_irn_n(get_irn_n(node, 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 1)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 1))) || var0 == get_irn_n(get_irn_n(node, 1), 1))) {
		new_node = new_bd_ia32_Btr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3750;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_btr32_imm -1 -> eor32(VAR_0, and32(VAR_0, shl32(const32[1], IMM_1)))
	if (is_Eor(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && is_And(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && is_Shl(get_irn_n(get_irn_n(node, 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 1)) == 1 && is_Const(get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0)) == 1 && x86_match_immediate(&tmp_imm, get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 1), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm))) {
		new_node = new_bd_ia32_Btr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3760;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_btr32 -1 -> eor32(VAR_0, and32(VAR_0, shl32(const32[1], VAR_1)))
	if (is_Eor(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && is_And(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && is_Shl(get_irn_n(get_irn_n(node, 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 1)) == 1 && is_Const(get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 1))) {
		new_node = new_bd_ia32_Btr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3770;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_andn32 -1 -> eor32(VAR_1, and32(VAR_0, VAR_1))
	if (is_Eor(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var1 == NULL && (var1 = get_irn_n(node, 0))) || var1 == get_irn_n(node, 0)) && is_And(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 1))) || var1 == get_irn_n(get_irn_n(node, 1), 1))) {
		new_node = new_bd_ia32_Andn(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3780;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_andn32 -1 -> eor32(VAR_1, and32(VAR_1, VAR_0))
	if (is_Eor(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var1 == NULL && (var1 = get_irn_n(node, 0))) || var1 == get_irn_n(node, 0)) && is_And(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 0))) || var1 == get_irn_n(get_irn_n(node, 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 1))) || var0 == get_irn_n(get_irn_n(node, 1), 1))) {
		new_node = new_bd_ia32_Andn(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3790;
		goto done;
	}
	var0 = NULL;
	// ia_blsr32 -1 -> eor32(minus32(VAR_0), or32(minus32(VAR_0), VAR_0))
	if (is_Eor(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Minus(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && is_Or(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && is_Minus(get_irn_n(get_irn_n(node, 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 1))) || var0 == get_irn_n(get_irn_n(node, 1), 1))) {
		new_node = new_bd_ia32_Blsr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3800;
		goto done;
	}
	var0 = NULL;
	// ia_blsr32 -1 -> eor32(minus32(VAR_0), or32(VAR_0, minus32(VAR_0)))
	if (is_Eor(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Minus(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && is_Or(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && is_Minus(get_irn_n(get_irn_n(node, 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0))) {
		new_node = new_bd_ia32_Blsr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3810;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_btr32_imm -1 -> eor32(shl32(const32[1], IMM_1), or32(shl32(const32[1], IMM_1), VAR_0))
	if (is_Eor(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Shl(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 2 && is_Const(get_irn_n(get_irn_n(node, 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && x86_match_immediate(&tmp_imm, get_irn_n(get_irn_n(node, 0), 1), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm)) && is_Or(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && is_Shl(get_irn_n(get_irn_n(node, 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 0)) == 2 && is_Const(get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)) == 1 && x86_match_immediate(&tmp_imm, get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 1), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 1))) || var0 == get_irn_n(get_irn_n(node, 1), 1))) {
		new_node = new_bd_ia32_Btr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3820;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_btr32 -1 -> eor32(shl32(const32[1], VAR_1), or32(shl32(const32[1], VAR_1), VAR_0))
	if (is_Eor(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Shl(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 2 && is_Const(get_irn_n(get_irn_n(node, 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 1))) || var1 == get_irn_n(get_irn_n(node, 0), 1)) && is_Or(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && is_Shl(get_irn_n(get_irn_n(node, 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 0)) == 2 && is_Const(get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 1)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 1))) || var0 == get_irn_n(get_irn_n(node, 1), 1))) {
		new_node = new_bd_ia32_Btr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3830;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_btr32_imm -1 -> eor32(shl32(const32[1], IMM_1), or32(VAR_0, shl32(const32[1], IMM_1)))
	if (is_Eor(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Shl(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 2 && is_Const(get_irn_n(get_irn_n(node, 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && x86_match_immediate(&tmp_imm, get_irn_n(get_irn_n(node, 0), 1), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm)) && is_Or(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && is_Shl(get_irn_n(get_irn_n(node, 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 1)) == 2 && is_Const(get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0)) == 1 && x86_match_immediate(&tmp_imm, get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 1), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm))) {
		new_node = new_bd_ia32_Btr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3840;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_btr32 -1 -> eor32(shl32(const32[1], VAR_1), or32(VAR_0, shl32(const32[1], VAR_1)))
	if (is_Eor(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Shl(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 2 && is_Const(get_irn_n(get_irn_n(node, 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 1))) || var1 == get_irn_n(get_irn_n(node, 0), 1)) && is_Or(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && is_Shl(get_irn_n(get_irn_n(node, 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 1)) == 2 && is_Const(get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 1))) {
		new_node = new_bd_ia32_Btr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3850;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_andn32 -1 -> eor32(VAR_0, or32(VAR_0, VAR_1))
	if (is_Eor(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && is_Or(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 1))) || var1 == get_irn_n(get_irn_n(node, 1), 1))) {
		new_node = new_bd_ia32_Andn(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3860;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_andn32 -1 -> eor32(VAR_0, or32(VAR_1, VAR_0))
	if (is_Eor(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && is_Or(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 0))) || var1 == get_irn_n(get_irn_n(node, 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 1))) || var0 == get_irn_n(get_irn_n(node, 1), 1))) {
		new_node = new_bd_ia32_Andn(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3870;
		goto done;
	}
	var0 = NULL;
	// ia_blsr32 -1 -> eor32(or32(minus32(VAR_0), VAR_0), minus32(VAR_0))
	if (is_Eor(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Or(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Minus(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 1))) || var0 == get_irn_n(get_irn_n(node, 0), 1)) && is_Minus(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0))) {
		new_node = new_bd_ia32_Blsr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3880;
		goto done;
	}
	var0 = NULL;
	// ia_blsr32 -1 -> eor32(or32(VAR_0, minus32(VAR_0)), minus32(VAR_0))
	if (is_Eor(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Or(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && is_Minus(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && is_Minus(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0))) {
		new_node = new_bd_ia32_Blsr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3890;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_btr32_imm -1 -> eor32(or32(VAR_0, shl32(const32[1], IMM_1)), shl32(const32[1], IMM_1))
	if (is_Eor(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Or(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && is_Shl(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 2 && is_Const(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == 1 && x86_match_immediate(&tmp_imm, get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm)) && is_Shl(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && is_Const(get_irn_n(get_irn_n(node, 1), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 1), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 0)) == 1 && x86_match_immediate(&tmp_imm, get_irn_n(get_irn_n(node, 1), 1), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm))) {
		new_node = new_bd_ia32_Btr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3900;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_btr32 -1 -> eor32(or32(VAR_0, shl32(const32[1], VAR_1)), shl32(const32[1], VAR_1))
	if (is_Eor(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Or(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && is_Shl(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 2 && is_Const(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) && is_Shl(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && is_Const(get_irn_n(get_irn_n(node, 1), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 1), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 1))) || var1 == get_irn_n(get_irn_n(node, 1), 1))) {
		new_node = new_bd_ia32_Btr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3910;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_btr32_imm -1 -> eor32(or32(shl32(const32[1], IMM_1), VAR_0), shl32(const32[1], IMM_1))
	if (is_Eor(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Or(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Shl(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 2 && is_Const(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == 1 && x86_match_immediate(&tmp_imm, get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 1))) || var0 == get_irn_n(get_irn_n(node, 0), 1)) && is_Shl(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && is_Const(get_irn_n(get_irn_n(node, 1), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 1), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 0)) == 1 && x86_match_immediate(&tmp_imm, get_irn_n(get_irn_n(node, 1), 1), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm))) {
		new_node = new_bd_ia32_Btr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3920;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_btr32 -1 -> eor32(or32(shl32(const32[1], VAR_1), VAR_0), shl32(const32[1], VAR_1))
	if (is_Eor(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Or(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Shl(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 2 && is_Const(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 1))) || var0 == get_irn_n(get_irn_n(node, 0), 1)) && is_Shl(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && is_Const(get_irn_n(get_irn_n(node, 1), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 1), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 1))) || var1 == get_irn_n(get_irn_n(node, 1), 1))) {
		new_node = new_bd_ia32_Btr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3930;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_andn32 -1 -> eor32(or32(VAR_0, VAR_1), VAR_0)
	if (is_Eor(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Or(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 1))) || var1 == get_irn_n(get_irn_n(node, 0), 1)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Andn(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3940;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_andn32 -1 -> eor32(or32(VAR_1, VAR_0), VAR_0)
	if (is_Eor(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Or(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 0))) || var1 == get_irn_n(get_irn_n(node, 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 1))) || var0 == get_irn_n(get_irn_n(node, 0), 1)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Andn(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3950;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_btc32_imm -1 -> eor32(shl32(const32[1], IMM_1), VAR_0)
	if (is_Eor(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Shl(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Const(get_irn_n(get_irn_n(node, 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && x86_match_immediate(&tmp_imm, get_irn_n(get_irn_n(node, 0), 1), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Btc(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3960;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_btc32 -1 -> eor32(shl32(const32[1], VAR_1), VAR_0)
	if (is_Eor(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Shl(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Const(get_irn_n(get_irn_n(node, 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 0), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 1))) || var1 == get_irn_n(get_irn_n(node, 0), 1)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Btc(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3970;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_btc32_imm -1 -> eor32(VAR_0, shl32(const32[1], IMM_1))
	if (is_Eor(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && is_Shl(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && is_Const(get_irn_n(get_irn_n(node, 1), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 1), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 0)) == 1 && x86_match_immediate(&tmp_imm, get_irn_n(get_irn_n(node, 1), 1), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm))) {
		new_node = new_bd_ia32_Btc(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3980;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_btc32 -1 -> eor32(VAR_0, shl32(const32[1], VAR_1))
	if (is_Eor(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && is_Shl(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && is_Const(get_irn_n(get_irn_n(node, 1), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 1), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 1))) || var1 == get_irn_n(get_irn_n(node, 1), 1))) {
		new_node = new_bd_ia32_Btc(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 3990;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_xor32 -1 -> eor32(VAR_1, VAR_0)
	if (is_Eor(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var1 == NULL && (var1 = get_irn_n(node, 0))) || var1 == get_irn_n(node, 0)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Xor(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_commutative(new_node); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 4000;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_xor32 -1 -> eor32(VAR_0, VAR_1)
	if (is_Eor(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && ((var1 == NULL && (var1 = get_irn_n(node, 1))) || var1 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Xor(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_commutative(new_node); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 4010;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	var3 = NULL;
	// ia_xormem32_index 2 -> PROJ_0(store32(PROJ_0(load32(VAR_2, add32(VAR_0, VAR_1))), add32(VAR_0, VAR_1), eor32(PROJ_1(load32(VAR_2, add32(VAR_0, VAR_1))), VAR_3)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1)) && is_Eor(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1)) && ((var3 == NULL && (var3 = get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) || var3 == get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 4020;
		goto done;
	}
	// ia_xormem32_index -> store32(PROJ_0(load32(VAR_2, add32(VAR_0, VAR_1))), add32(VAR_0, VAR_1), eor32(PROJ_1(load32(VAR_2, add32(VAR_0, VAR_1))), VAR_3))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 1))) || var1 == get_irn_n(get_irn_n(node, 1), 1)) && is_Eor(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Proj(get_irn_n(get_irn_n(node, 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1)) && ((var3 == NULL && (var3 = get_irn_n(get_irn_n(node, 2), 1))) || var3 == get_irn_n(get_irn_n(node, 2), 1))) {
		new_node = new_bd_ia32_XorMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2), is_ia32_Immediate(var3) ? var3 : be_transform_node(var3)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 4021;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	var3 = NULL;
	// ia_xormem32_index 2 -> PROJ_0(store32(PROJ_0(load32(VAR_2, add32(VAR_1, VAR_0))), add32(VAR_1, VAR_0), eor32(PROJ_1(load32(VAR_2, add32(VAR_1, VAR_0))), VAR_3)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1)) && is_Eor(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1)) && ((var3 == NULL && (var3 = get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) || var3 == get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 4030;
		goto done;
	}
	// ia_xormem32_index -> store32(PROJ_0(load32(VAR_2, add32(VAR_1, VAR_0))), add32(VAR_1, VAR_0), eor32(PROJ_1(load32(VAR_2, add32(VAR_1, VAR_0))), VAR_3))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 0))) || var1 == get_irn_n(get_irn_n(node, 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 1))) || var0 == get_irn_n(get_irn_n(node, 1), 1)) && is_Eor(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Proj(get_irn_n(get_irn_n(node, 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1)) && ((var3 == NULL && (var3 = get_irn_n(get_irn_n(node, 2), 1))) || var3 == get_irn_n(get_irn_n(node, 2), 1))) {
		new_node = new_bd_ia32_XorMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2), is_ia32_Immediate(var3) ? var3 : be_transform_node(var3)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 4031;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	// ia_xormem32 2 -> PROJ_0(store32(PROJ_0(load32(VAR_1, VAR_0)), VAR_0, eor32(PROJ_1(load32(VAR_1, VAR_0)), VAR_2)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(node), 1))) || var0 == get_irn_n(get_Proj_pred(node), 1)) && is_Eor(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) && ((var2 == NULL && (var2 = get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) || var2 == get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 4040;
		goto done;
	}
	// ia_xormem32 -> store32(PROJ_0(load32(VAR_1, VAR_0)), VAR_0, eor32(PROJ_1(load32(VAR_1, VAR_0)), VAR_2))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1)) && is_Eor(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Proj(get_irn_n(get_irn_n(node, 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) && ((var2 == NULL && (var2 = get_irn_n(get_irn_n(node, 2), 1))) || var2 == get_irn_n(get_irn_n(node, 2), 1))) {
		new_node = new_bd_ia32_XorMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), noreg_GP, is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 4041;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	var3 = NULL;
	// ia_xormem32_index 2 -> PROJ_0(store32(PROJ_0(load32(VAR_2, add32(VAR_1, VAR_0))), add32(VAR_1, VAR_0), eor32(VAR_3, PROJ_1(load32(VAR_2, add32(VAR_1, VAR_0))))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1)) && is_Eor(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && ((var3 == NULL && (var3 = get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) || var3 == get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 4050;
		goto done;
	}
	// ia_xormem32_index -> store32(PROJ_0(load32(VAR_2, add32(VAR_1, VAR_0))), add32(VAR_1, VAR_0), eor32(VAR_3, PROJ_1(load32(VAR_2, add32(VAR_1, VAR_0)))))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 0))) || var1 == get_irn_n(get_irn_n(node, 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 1))) || var0 == get_irn_n(get_irn_n(node, 1), 1)) && is_Eor(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && ((var3 == NULL && (var3 = get_irn_n(get_irn_n(node, 2), 0))) || var3 == get_irn_n(get_irn_n(node, 2), 0)) && is_Proj(get_irn_n(get_irn_n(node, 2), 1)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 1)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 1)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1), 1))) {
		new_node = new_bd_ia32_XorMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2), is_ia32_Immediate(var3) ? var3 : be_transform_node(var3)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 4051;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	var3 = NULL;
	// ia_xormem32_index 2 -> PROJ_0(store32(PROJ_0(load32(VAR_2, add32(VAR_0, VAR_1))), add32(VAR_0, VAR_1), eor32(VAR_3, PROJ_1(load32(VAR_2, add32(VAR_0, VAR_1))))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1)) && is_Eor(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && ((var3 == NULL && (var3 = get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) || var3 == get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 4060;
		goto done;
	}
	// ia_xormem32_index -> store32(PROJ_0(load32(VAR_2, add32(VAR_0, VAR_1))), add32(VAR_0, VAR_1), eor32(VAR_3, PROJ_1(load32(VAR_2, add32(VAR_0, VAR_1)))))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 1))) || var1 == get_irn_n(get_irn_n(node, 1), 1)) && is_Eor(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && ((var3 == NULL && (var3 = get_irn_n(get_irn_n(node, 2), 0))) || var3 == get_irn_n(get_irn_n(node, 2), 0)) && is_Proj(get_irn_n(get_irn_n(node, 2), 1)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 1)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 1)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1), 1))) {
		new_node = new_bd_ia32_XorMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2), is_ia32_Immediate(var3) ? var3 : be_transform_node(var3)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 4061;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	// ia_xormem32 2 -> PROJ_0(store32(PROJ_0(load32(VAR_1, VAR_0)), VAR_0, eor32(VAR_2, PROJ_1(load32(VAR_1, VAR_0)))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(node), 1))) || var0 == get_irn_n(get_Proj_pred(node), 1)) && is_Eor(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && ((var2 == NULL && (var2 = get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) || var2 == get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 4070;
		goto done;
	}
	// ia_xormem32 -> store32(PROJ_0(load32(VAR_1, VAR_0)), VAR_0, eor32(VAR_2, PROJ_1(load32(VAR_1, VAR_0))))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1)) && is_Eor(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && ((var2 == NULL && (var2 = get_irn_n(get_irn_n(node, 2), 0))) || var2 == get_irn_n(get_irn_n(node, 2), 0)) && is_Proj(get_irn_n(get_irn_n(node, 2), 1)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 1)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 1)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 1)), 1))) {
		new_node = new_bd_ia32_XorMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), noreg_GP, is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 4071;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_sub32_imm 0 -> sub32(VAR_0, IMM_1)
	if (is_Sub(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && x86_match_immediate(&tmp_imm, get_irn_n(node, 1), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm))) {
		new_node = new_bd_ia32_Sub(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_irn_mode(new_node, mode_T); set_ia32_ls_mode(new_node, get_irn_mode(node)); set_ia32_am_support(new_node, ia32_am_none);
		new_node = be_new_Proj(new_node, 0);
		*rule = 4080;
		goto done;
	}
	var0 = NULL;
	// ia_inc32 -1 -> sub32(VAR_0, const32[4294967295])
	if (is_Sub(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && is_Const(get_irn_n(node, 1)) && tarval_cmp(get_Const_tarval(get_irn_n(node, 1)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(node, 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(node, 1)) == 1) {
		new_node = new_bd_ia32_Inc(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0));
		*rule = 4090;
		goto done;
	}
	var0 = NULL;
	// ia_dec32 -1 -> sub32(VAR_0, const32[1])
	if (is_Sub(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && is_Const(get_irn_n(node, 1)) && tarval_cmp(get_Const_tarval(get_irn_n(node, 1)), new_tarval_from_long(1, get_irn_mode(get_irn_n(node, 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(node, 1)) == 1) {
		new_node = new_bd_ia32_Dec(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0));
		*rule = 4100;
		goto done;
	}
	var0 = NULL;
	// ia_blsr32 -1 -> sub32(VAR_0, and32(minus32(VAR_0), VAR_0))
	if (is_Sub(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && is_And(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && is_Minus(get_irn_n(get_irn_n(node, 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 1))) || var0 == get_irn_n(get_irn_n(node, 1), 1))) {
		new_node = new_bd_ia32_Blsr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 4110;
		goto done;
	}
	var0 = NULL;
	// ia_blsr32 -1 -> sub32(VAR_0, and32(VAR_0, minus32(VAR_0)))
	if (is_Sub(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && is_And(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && is_Minus(get_irn_n(get_irn_n(node, 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0))) {
		new_node = new_bd_ia32_Blsr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 4120;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_btr32_imm -1 -> sub32(VAR_0, and32(shl32(const32[1], IMM_1), VAR_0))
	if (is_Sub(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && is_And(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && is_Shl(get_irn_n(get_irn_n(node, 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)) == 1 && x86_match_immediate(&tmp_imm, get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 1), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 1))) || var0 == get_irn_n(get_irn_n(node, 1), 1))) {
		new_node = new_bd_ia32_Btr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 4130;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_btr32 -1 -> sub32(VAR_0, and32(shl32(const32[1], VAR_1), VAR_0))
	if (is_Sub(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && is_And(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && is_Shl(get_irn_n(get_irn_n(node, 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 0)) == 1 && is_Const(get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 1)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 1))) || var0 == get_irn_n(get_irn_n(node, 1), 1))) {
		new_node = new_bd_ia32_Btr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 4140;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_btr32_imm -1 -> sub32(VAR_0, and32(VAR_0, shl32(const32[1], IMM_1)))
	if (is_Sub(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && is_And(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && is_Shl(get_irn_n(get_irn_n(node, 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 1)) == 1 && is_Const(get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0)) == 1 && x86_match_immediate(&tmp_imm, get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 1), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm))) {
		new_node = new_bd_ia32_Btr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 4150;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_btr32 -1 -> sub32(VAR_0, and32(VAR_0, shl32(const32[1], VAR_1)))
	if (is_Sub(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && is_And(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && is_Shl(get_irn_n(get_irn_n(node, 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 1)) == 1 && is_Const(get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 1))) {
		new_node = new_bd_ia32_Btr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 4160;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_andn32 -1 -> sub32(VAR_1, and32(VAR_1, VAR_0))
	if (is_Sub(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var1 == NULL && (var1 = get_irn_n(node, 0))) || var1 == get_irn_n(node, 0)) && is_And(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 0))) || var1 == get_irn_n(get_irn_n(node, 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 1))) || var0 == get_irn_n(get_irn_n(node, 1), 1))) {
		new_node = new_bd_ia32_Andn(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 4170;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_andn32 -1 -> sub32(VAR_1, and32(VAR_0, VAR_1))
	if (is_Sub(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var1 == NULL && (var1 = get_irn_n(node, 0))) || var1 == get_irn_n(node, 0)) && is_And(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 1))) || var1 == get_irn_n(get_irn_n(node, 1), 1))) {
		new_node = new_bd_ia32_Andn(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 4180;
		goto done;
	}
	var0 = NULL;
	// ia_blsr32 -1 -> sub32(or32(minus32(VAR_0), VAR_0), minus32(VAR_0))
	if (is_Sub(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Or(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Minus(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 1))) || var0 == get_irn_n(get_irn_n(node, 0), 1)) && is_Minus(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0))) {
		new_node = new_bd_ia32_Blsr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 4190;
		goto done;
	}
	var0 = NULL;
	// ia_blsr32 -1 -> sub32(or32(VAR_0, minus32(VAR_0)), minus32(VAR_0))
	if (is_Sub(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Or(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && is_Minus(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && is_Minus(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0))) {
		new_node = new_bd_ia32_Blsr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 4200;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_btr32_imm -1 -> sub32(or32(VAR_0, shl32(const32[1], IMM_1)), shl32(const32[1], IMM_1))
	if (is_Sub(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Or(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && is_Shl(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 2 && is_Const(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == 1 && x86_match_immediate(&tmp_imm, get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm)) && is_Shl(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && is_Const(get_irn_n(get_irn_n(node, 1), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 1), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 0)) == 1 && x86_match_immediate(&tmp_imm, get_irn_n(get_irn_n(node, 1), 1), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm))) {
		new_node = new_bd_ia32_Btr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 4210;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_btr32 -1 -> sub32(or32(VAR_0, shl32(const32[1], VAR_1)), shl32(const32[1], VAR_1))
	if (is_Sub(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Or(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && is_Shl(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 2 && is_Const(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 1)) && is_Shl(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && is_Const(get_irn_n(get_irn_n(node, 1), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 1), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 1))) || var1 == get_irn_n(get_irn_n(node, 1), 1))) {
		new_node = new_bd_ia32_Btr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 4220;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_btr32_imm -1 -> sub32(or32(shl32(const32[1], IMM_1), VAR_0), shl32(const32[1], IMM_1))
	if (is_Sub(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Or(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Shl(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 2 && is_Const(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == 1 && x86_match_immediate(&tmp_imm, get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 1))) || var0 == get_irn_n(get_irn_n(node, 0), 1)) && is_Shl(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && is_Const(get_irn_n(get_irn_n(node, 1), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 1), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 0)) == 1 && x86_match_immediate(&tmp_imm, get_irn_n(get_irn_n(node, 1), 1), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm))) {
		new_node = new_bd_ia32_Btr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 4230;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_btr32 -1 -> sub32(or32(shl32(const32[1], VAR_1), VAR_0), shl32(const32[1], VAR_1))
	if (is_Sub(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Or(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Shl(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 2 && is_Const(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1))) || var1 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 1)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 1))) || var0 == get_irn_n(get_irn_n(node, 0), 1)) && is_Shl(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && is_Const(get_irn_n(get_irn_n(node, 1), 0)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 1), 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 1))) || var1 == get_irn_n(get_irn_n(node, 1), 1))) {
		new_node = new_bd_ia32_Btr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 4240;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_andn32 -1 -> sub32(or32(VAR_0, VAR_1), VAR_0)
	if (is_Sub(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Or(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 1))) || var1 == get_irn_n(get_irn_n(node, 0), 1)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Andn(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 4250;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_andn32 -1 -> sub32(or32(VAR_1, VAR_0), VAR_0)
	if (is_Sub(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Or(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 0), 0))) || var1 == get_irn_n(get_irn_n(node, 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 1))) || var0 == get_irn_n(get_irn_n(node, 0), 1)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Andn(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 4260;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_sub32 0 -> sub32(VAR_0, VAR_1)
	if (is_Sub(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && ((var1 == NULL && (var1 = get_irn_n(node, 1))) || var1 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Sub(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_irn_mode(new_node, mode_T); set_ia32_ls_mode(new_node, get_irn_mode(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 4270;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	// ia_incmem32_index 2 -> PROJ_0(store32(PROJ_0(load32(VAR_2, add32(VAR_0, VAR_1))), add32(VAR_0, VAR_1), sub32(PROJ_1(load32(VAR_2, add32(VAR_0, VAR_1))), const32[4294967295])))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1)) && is_Sub(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 4280;
		goto done;
	}
	// ia_incmem32_index -> store32(PROJ_0(load32(VAR_2, add32(VAR_0, VAR_1))), add32(VAR_0, VAR_1), sub32(PROJ_1(load32(VAR_2, add32(VAR_0, VAR_1))), const32[4294967295]))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 1))) || var1 == get_irn_n(get_irn_n(node, 1), 1)) && is_Sub(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Proj(get_irn_n(get_irn_n(node, 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1)) && is_Const(get_irn_n(get_irn_n(node, 2), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 2), 1)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(node, 2), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 1)) == 1) {
		new_node = new_bd_ia32_IncMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 4281;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	// ia_incmem32_index 2 -> PROJ_0(store32(PROJ_0(load32(VAR_2, add32(VAR_1, VAR_0))), add32(VAR_1, VAR_0), sub32(PROJ_1(load32(VAR_2, add32(VAR_1, VAR_0))), const32[4294967295])))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1)) && is_Sub(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 4290;
		goto done;
	}
	// ia_incmem32_index -> store32(PROJ_0(load32(VAR_2, add32(VAR_1, VAR_0))), add32(VAR_1, VAR_0), sub32(PROJ_1(load32(VAR_2, add32(VAR_1, VAR_0))), const32[4294967295]))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 0))) || var1 == get_irn_n(get_irn_n(node, 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 1))) || var0 == get_irn_n(get_irn_n(node, 1), 1)) && is_Sub(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Proj(get_irn_n(get_irn_n(node, 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1)) && is_Const(get_irn_n(get_irn_n(node, 2), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 2), 1)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(node, 2), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 1)) == 1) {
		new_node = new_bd_ia32_IncMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 4291;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_incmem32 2 -> PROJ_0(store32(PROJ_0(load32(VAR_1, VAR_0)), VAR_0, sub32(PROJ_1(load32(VAR_1, VAR_0)), const32[4294967295])))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(node), 1))) || var0 == get_irn_n(get_Proj_pred(node), 1)) && is_Sub(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 4300;
		goto done;
	}
	// ia_incmem32 -> store32(PROJ_0(load32(VAR_1, VAR_0)), VAR_0, sub32(PROJ_1(load32(VAR_1, VAR_0)), const32[4294967295]))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1)) && is_Sub(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Proj(get_irn_n(get_irn_n(node, 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) && is_Const(get_irn_n(get_irn_n(node, 2), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 2), 1)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(get_irn_n(node, 2), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 1)) == 1) {
		new_node = new_bd_ia32_IncMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), noreg_GP, is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 4301;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	// ia_decmem32_index 2 -> PROJ_0(store32(PROJ_0(load32(VAR_2, add32(VAR_1, VAR_0))), add32(VAR_1, VAR_0), sub32(PROJ_1(load32(VAR_2, add32(VAR_1, VAR_0))), const32[1])))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1)) && is_Sub(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 4310;
		goto done;
	}
	// ia_decmem32_index -> store32(PROJ_0(load32(VAR_2, add32(VAR_1, VAR_0))), add32(VAR_1, VAR_0), sub32(PROJ_1(load32(VAR_2, add32(VAR_1, VAR_0))), const32[1]))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 0))) || var1 == get_irn_n(get_irn_n(node, 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 1))) || var0 == get_irn_n(get_irn_n(node, 1), 1)) && is_Sub(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Proj(get_irn_n(get_irn_n(node, 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1)) && is_Const(get_irn_n(get_irn_n(node, 2), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 2), 1)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(node, 2), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 1)) == 1) {
		new_node = new_bd_ia32_DecMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 4311;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	// ia_decmem32_index 2 -> PROJ_0(store32(PROJ_0(load32(VAR_2, add32(VAR_0, VAR_1))), add32(VAR_0, VAR_1), sub32(PROJ_1(load32(VAR_2, add32(VAR_0, VAR_1))), const32[1])))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1)) && is_Sub(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 4320;
		goto done;
	}
	// ia_decmem32_index -> store32(PROJ_0(load32(VAR_2, add32(VAR_0, VAR_1))), add32(VAR_0, VAR_1), sub32(PROJ_1(load32(VAR_2, add32(VAR_0, VAR_1))), const32[1]))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 1))) || var1 == get_irn_n(get_irn_n(node, 1), 1)) && is_Sub(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Proj(get_irn_n(get_irn_n(node, 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1)) && is_Const(get_irn_n(get_irn_n(node, 2), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 2), 1)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(node, 2), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 1)) == 1) {
		new_node = new_bd_ia32_DecMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 4321;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	var3 = NULL;
	// ia_submem32_index 2 -> PROJ_0(store32(PROJ_0(load32(VAR_2, add32(VAR_1, VAR_0))), add32(VAR_1, VAR_0), sub32(PROJ_1(load32(VAR_2, add32(VAR_1, VAR_0))), VAR_3)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1)) && is_Sub(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1)) && ((var3 == NULL && (var3 = get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) || var3 == get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 4330;
		goto done;
	}
	// ia_submem32_index -> store32(PROJ_0(load32(VAR_2, add32(VAR_1, VAR_0))), add32(VAR_1, VAR_0), sub32(PROJ_1(load32(VAR_2, add32(VAR_1, VAR_0))), VAR_3))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 0))) || var1 == get_irn_n(get_irn_n(node, 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 1))) || var0 == get_irn_n(get_irn_n(node, 1), 1)) && is_Sub(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Proj(get_irn_n(get_irn_n(node, 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1)) && ((var3 == NULL && (var3 = get_irn_n(get_irn_n(node, 2), 1))) || var3 == get_irn_n(get_irn_n(node, 2), 1))) {
		new_node = new_bd_ia32_SubMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2), is_ia32_Immediate(var3) ? var3 : be_transform_node(var3)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 4331;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	var3 = NULL;
	// ia_submem32_index 2 -> PROJ_0(store32(PROJ_0(load32(VAR_2, add32(VAR_0, VAR_1))), add32(VAR_0, VAR_1), sub32(PROJ_1(load32(VAR_2, add32(VAR_0, VAR_1))), VAR_3)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1)) && is_Sub(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1)) && ((var3 == NULL && (var3 = get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) || var3 == get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 4340;
		goto done;
	}
	// ia_submem32_index -> store32(PROJ_0(load32(VAR_2, add32(VAR_0, VAR_1))), add32(VAR_0, VAR_1), sub32(PROJ_1(load32(VAR_2, add32(VAR_0, VAR_1))), VAR_3))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 1))) || var1 == get_irn_n(get_irn_n(node, 1), 1)) && is_Sub(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Proj(get_irn_n(get_irn_n(node, 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1)) && ((var3 == NULL && (var3 = get_irn_n(get_irn_n(node, 2), 1))) || var3 == get_irn_n(get_irn_n(node, 2), 1))) {
		new_node = new_bd_ia32_SubMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2), is_ia32_Immediate(var3) ? var3 : be_transform_node(var3)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 4341;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_decmem32 2 -> PROJ_0(store32(PROJ_0(load32(VAR_1, VAR_0)), VAR_0, sub32(PROJ_1(load32(VAR_1, VAR_0)), const32[1])))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(node), 1))) || var0 == get_irn_n(get_Proj_pred(node), 1)) && is_Sub(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) && is_Const(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1)) == 1) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 4350;
		goto done;
	}
	// ia_decmem32 -> store32(PROJ_0(load32(VAR_1, VAR_0)), VAR_0, sub32(PROJ_1(load32(VAR_1, VAR_0)), const32[1]))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1)) && is_Sub(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Proj(get_irn_n(get_irn_n(node, 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) && is_Const(get_irn_n(get_irn_n(node, 2), 1)) && tarval_cmp(get_Const_tarval(get_irn_n(get_irn_n(node, 2), 1)), new_tarval_from_long(1, get_irn_mode(get_irn_n(get_irn_n(node, 2), 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 1)) == 1) {
		new_node = new_bd_ia32_DecMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), noreg_GP, is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 4351;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	// ia_submem32 2 -> PROJ_0(store32(PROJ_0(load32(VAR_1, VAR_0)), VAR_0, sub32(PROJ_1(load32(VAR_1, VAR_0)), VAR_2)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(node), 1))) || var0 == get_irn_n(get_Proj_pred(node), 1)) && is_Sub(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) && ((var2 == NULL && (var2 = get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) || var2 == get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 4360;
		goto done;
	}
	// ia_submem32 -> store32(PROJ_0(load32(VAR_1, VAR_0)), VAR_0, sub32(PROJ_1(load32(VAR_1, VAR_0)), VAR_2))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1)) && is_Sub(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Proj(get_irn_n(get_irn_n(node, 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) && ((var2 == NULL && (var2 = get_irn_n(get_irn_n(node, 2), 1))) || var2 == get_irn_n(get_irn_n(node, 2), 1))) {
		new_node = new_bd_ia32_SubMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), noreg_GP, is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 4361;
		goto done;
	}
	var0 = NULL;
	// ia_inc32 -1 -> add32(const32[1], VAR_0)
	if (is_Add(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Const(get_irn_n(node, 0)) && tarval_cmp(get_Const_tarval(get_irn_n(node, 0)), new_tarval_from_long(1, get_irn_mode(get_irn_n(node, 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Inc(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0));
		*rule = 4370;
		goto done;
	}
	var0 = NULL;
	// ia_inc32 -1 -> add32(VAR_0, const32[1])
	if (is_Add(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && is_Const(get_irn_n(node, 1)) && tarval_cmp(get_Const_tarval(get_irn_n(node, 1)), new_tarval_from_long(1, get_irn_mode(get_irn_n(node, 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(node, 1)) == 1) {
		new_node = new_bd_ia32_Inc(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0));
		*rule = 4380;
		goto done;
	}
	var0 = NULL;
	// ia_inc32 -1 -> minus32(not32(VAR_0))
	if (is_Minus(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Not(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0))) {
		new_node = new_bd_ia32_Inc(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0));
		*rule = 4390;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	// ia_incmem32_index 2 -> PROJ_0(store32(PROJ_0(load32(VAR_2, add32(VAR_1, VAR_0))), add32(VAR_1, VAR_0), minus32(not32(PROJ_1(load32(VAR_2, add32(VAR_1, VAR_0)))))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1)) && is_Minus(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Proj(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 4400;
		goto done;
	}
	// ia_incmem32_index -> store32(PROJ_0(load32(VAR_2, add32(VAR_1, VAR_0))), add32(VAR_1, VAR_0), minus32(not32(PROJ_1(load32(VAR_2, add32(VAR_1, VAR_0))))))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 0))) || var1 == get_irn_n(get_irn_n(node, 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 1))) || var0 == get_irn_n(get_irn_n(node, 1), 1)) && is_Minus(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Not(get_irn_n(get_irn_n(node, 2), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 2), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 2), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 2), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Proj(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 1), 1))) {
		new_node = new_bd_ia32_IncMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 4401;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	// ia_incmem32_index 2 -> PROJ_0(store32(PROJ_0(load32(VAR_2, add32(VAR_0, VAR_1))), add32(VAR_0, VAR_1), minus32(not32(PROJ_1(load32(VAR_2, add32(VAR_0, VAR_1)))))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1)) && is_Minus(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Proj(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 4410;
		goto done;
	}
	// ia_incmem32_index -> store32(PROJ_0(load32(VAR_2, add32(VAR_0, VAR_1))), add32(VAR_0, VAR_1), minus32(not32(PROJ_1(load32(VAR_2, add32(VAR_0, VAR_1))))))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 1))) || var1 == get_irn_n(get_irn_n(node, 1), 1)) && is_Minus(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Not(get_irn_n(get_irn_n(node, 2), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 2), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 2), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 2), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Proj(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 1), 1))) {
		new_node = new_bd_ia32_IncMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 4411;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_incmem32 2 -> PROJ_0(store32(PROJ_0(load32(VAR_1, VAR_0)), VAR_0, minus32(not32(PROJ_1(load32(VAR_1, VAR_0))))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(node), 1))) || var0 == get_irn_n(get_Proj_pred(node), 1)) && is_Minus(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Not(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Proj(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 4420;
		goto done;
	}
	// ia_incmem32 -> store32(PROJ_0(load32(VAR_1, VAR_0)), VAR_0, minus32(not32(PROJ_1(load32(VAR_1, VAR_0)))))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1)) && is_Minus(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Not(get_irn_n(get_irn_n(node, 2), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 2), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 2), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 2), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Proj(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 1))) {
		new_node = new_bd_ia32_IncMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), noreg_GP, is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 4421;
		goto done;
	}
	var0 = NULL;
	// ia_dec32 -1 -> add32(const32[4294967295], VAR_0)
	if (is_Add(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Const(get_irn_n(node, 0)) && tarval_cmp(get_Const_tarval(get_irn_n(node, 0)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(node, 0)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Dec(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0));
		*rule = 4430;
		goto done;
	}
	var0 = NULL;
	// ia_dec32 -1 -> add32(VAR_0, const32[4294967295])
	if (is_Add(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && is_Const(get_irn_n(node, 1)) && tarval_cmp(get_Const_tarval(get_irn_n(node, 1)), new_tarval_from_long(4294967295, get_irn_mode(get_irn_n(node, 1)))) == ir_relation_equal && get_irn_n_edges(get_irn_n(node, 1)) == 1) {
		new_node = new_bd_ia32_Dec(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0));
		*rule = 4440;
		goto done;
	}
	var0 = NULL;
	// ia_dec32 -1 -> not32(minus32(VAR_0))
	if (is_Not(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Minus(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0))) {
		new_node = new_bd_ia32_Dec(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0));
		*rule = 4450;
		goto done;
	}
	var0 = NULL;
	// ia_not32 -1 -> not32(VAR_0)
	if (is_Not(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0))) {
		new_node = new_bd_ia32_Not(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0));
		*rule = 4460;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	// ia_notmem32_index 2 -> PROJ_0(store32(PROJ_0(load32(VAR_2, add32(VAR_0, VAR_1))), add32(VAR_0, VAR_1), not32(PROJ_1(load32(VAR_2, add32(VAR_0, VAR_1))))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1)) && is_Not(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 4470;
		goto done;
	}
	// ia_notmem32_index -> store32(PROJ_0(load32(VAR_2, add32(VAR_0, VAR_1))), add32(VAR_0, VAR_1), not32(PROJ_1(load32(VAR_2, add32(VAR_0, VAR_1)))))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 1))) || var1 == get_irn_n(get_irn_n(node, 1), 1)) && is_Not(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Proj(get_irn_n(get_irn_n(node, 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1))) {
		new_node = new_bd_ia32_NotMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 4471;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	// ia_notmem32_index 2 -> PROJ_0(store32(PROJ_0(load32(VAR_2, add32(VAR_1, VAR_0))), add32(VAR_1, VAR_0), not32(PROJ_1(load32(VAR_2, add32(VAR_1, VAR_0))))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1)) && is_Not(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 4480;
		goto done;
	}
	// ia_notmem32_index -> store32(PROJ_0(load32(VAR_2, add32(VAR_1, VAR_0))), add32(VAR_1, VAR_0), not32(PROJ_1(load32(VAR_2, add32(VAR_1, VAR_0)))))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 0))) || var1 == get_irn_n(get_irn_n(node, 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 1))) || var0 == get_irn_n(get_irn_n(node, 1), 1)) && is_Not(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Proj(get_irn_n(get_irn_n(node, 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1))) {
		new_node = new_bd_ia32_NotMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 4481;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_notmem32 2 -> PROJ_0(store32(PROJ_0(load32(VAR_1, VAR_0)), VAR_0, not32(PROJ_1(load32(VAR_1, VAR_0)))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(node), 1))) || var0 == get_irn_n(get_Proj_pred(node), 1)) && is_Not(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 4490;
		goto done;
	}
	// ia_notmem32 -> store32(PROJ_0(load32(VAR_1, VAR_0)), VAR_0, not32(PROJ_1(load32(VAR_1, VAR_0))))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1)) && is_Not(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Proj(get_irn_n(get_irn_n(node, 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1))) {
		new_node = new_bd_ia32_NotMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), noreg_GP, is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 4491;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	// ia_decmem32_index 2 -> PROJ_0(store32(PROJ_0(load32(VAR_2, add32(VAR_1, VAR_0))), add32(VAR_1, VAR_0), not32(minus32(PROJ_1(load32(VAR_2, add32(VAR_1, VAR_0)))))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1)) && is_Not(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Minus(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Proj(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 4500;
		goto done;
	}
	// ia_decmem32_index -> store32(PROJ_0(load32(VAR_2, add32(VAR_1, VAR_0))), add32(VAR_1, VAR_0), not32(minus32(PROJ_1(load32(VAR_2, add32(VAR_1, VAR_0))))))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 0))) || var1 == get_irn_n(get_irn_n(node, 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 1))) || var0 == get_irn_n(get_irn_n(node, 1), 1)) && is_Not(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Minus(get_irn_n(get_irn_n(node, 2), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 2), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 2), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 2), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Proj(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 1), 1))) {
		new_node = new_bd_ia32_DecMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 4501;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	// ia_decmem32_index 2 -> PROJ_0(store32(PROJ_0(load32(VAR_2, add32(VAR_0, VAR_1))), add32(VAR_0, VAR_1), not32(minus32(PROJ_1(load32(VAR_2, add32(VAR_0, VAR_1)))))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1)) && is_Not(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Minus(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Proj(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 4510;
		goto done;
	}
	// ia_decmem32_index -> store32(PROJ_0(load32(VAR_2, add32(VAR_0, VAR_1))), add32(VAR_0, VAR_1), not32(minus32(PROJ_1(load32(VAR_2, add32(VAR_0, VAR_1))))))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 1))) || var1 == get_irn_n(get_irn_n(node, 1), 1)) && is_Not(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Minus(get_irn_n(get_irn_n(node, 2), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 2), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 2), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 2), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Proj(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 1), 1))) {
		new_node = new_bd_ia32_DecMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 4511;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_decmem32 2 -> PROJ_0(store32(PROJ_0(load32(VAR_1, VAR_0)), VAR_0, not32(minus32(PROJ_1(load32(VAR_1, VAR_0))))))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(node), 1))) || var0 == get_irn_n(get_Proj_pred(node), 1)) && is_Not(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Minus(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && (get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Proj(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0), 0)), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 4520;
		goto done;
	}
	// ia_decmem32 -> store32(PROJ_0(load32(VAR_1, VAR_0)), VAR_0, not32(minus32(PROJ_1(load32(VAR_1, VAR_0)))))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1)) && is_Not(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Minus(get_irn_n(get_irn_n(node, 2), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 2), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 2), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 2), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Proj(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_irn_n(node, 2), 0), 0)), 1))) {
		new_node = new_bd_ia32_DecMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), noreg_GP, is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 4521;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	// ia_load32_index 0 -> PROJ_1(load32(VAR_2, add32(VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Load(get_Proj_pred(node)) && (get_Load_mode(get_Proj_pred(node)) == mode_Is || get_Load_mode(get_Proj_pred(node)) == mode_Iu || get_Load_mode(get_Proj_pred(node)) == mode_P) && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(node), 0))) || var2 == get_irn_n(get_Proj_pred(node), 0)) && is_Add(get_irn_n(get_Proj_pred(node), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 4530;
		goto done;
	}
	// ia_load32_index 2 -> PROJ_0(load32(VAR_2, add32(VAR_1, VAR_0)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Load(get_Proj_pred(node)) && (get_Load_mode(get_Proj_pred(node)) == mode_Is || get_Load_mode(get_Proj_pred(node)) == mode_Iu || get_Load_mode(get_Proj_pred(node)) == mode_P) && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(node), 0))) || var2 == get_irn_n(get_Proj_pred(node), 0)) && is_Add(get_irn_n(get_Proj_pred(node), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 4531;
		goto done;
	}
	// ia_load32_index -> load32(VAR_2, add32(VAR_1, VAR_0))
	if (is_Load(node) && (get_Load_mode(node) == mode_Is || get_Load_mode(node) == mode_Iu || get_Load_mode(node) == mode_P) && ((var2 == NULL && (var2 = get_irn_n(node, 0))) || var2 == get_irn_n(node, 0)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 0))) || var1 == get_irn_n(get_irn_n(node, 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 1))) || var0 == get_irn_n(get_irn_n(node, 1), 1))) {
		new_node = new_bd_ia32_Load(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2)); set_ia32_ls_mode(new_node, get_Load_mode(node));
		*rule = 4532;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	// ia_load32_index 0 -> PROJ_1(load32(VAR_2, add32(VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Load(get_Proj_pred(node)) && (get_Load_mode(get_Proj_pred(node)) == mode_Is || get_Load_mode(get_Proj_pred(node)) == mode_Iu || get_Load_mode(get_Proj_pred(node)) == mode_P) && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(node), 0))) || var2 == get_irn_n(get_Proj_pred(node), 0)) && is_Add(get_irn_n(get_Proj_pred(node), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 4540;
		goto done;
	}
	// ia_load32_index 2 -> PROJ_0(load32(VAR_2, add32(VAR_0, VAR_1)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Load(get_Proj_pred(node)) && (get_Load_mode(get_Proj_pred(node)) == mode_Is || get_Load_mode(get_Proj_pred(node)) == mode_Iu || get_Load_mode(get_Proj_pred(node)) == mode_P) && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(node), 0))) || var2 == get_irn_n(get_Proj_pred(node), 0)) && is_Add(get_irn_n(get_Proj_pred(node), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 4541;
		goto done;
	}
	// ia_load32_index -> load32(VAR_2, add32(VAR_0, VAR_1))
	if (is_Load(node) && (get_Load_mode(node) == mode_Is || get_Load_mode(node) == mode_Iu || get_Load_mode(node) == mode_P) && ((var2 == NULL && (var2 = get_irn_n(node, 0))) || var2 == get_irn_n(node, 0)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 1))) || var1 == get_irn_n(get_irn_n(node, 1), 1))) {
		new_node = new_bd_ia32_Load(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2)); set_ia32_ls_mode(new_node, get_Load_mode(node));
		*rule = 4542;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_load32 0 -> PROJ_1(load32(VAR_1, VAR_0))
	if (is_Proj(node) && get_Proj_num(node) == 1 && is_Load(get_Proj_pred(node)) && (get_Load_mode(get_Proj_pred(node)) == mode_Is || get_Load_mode(get_Proj_pred(node)) == mode_Iu || get_Load_mode(get_Proj_pred(node)) == mode_P) && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(node), 0))) || var1 == get_irn_n(get_Proj_pred(node), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(node), 1))) || var0 == get_irn_n(get_Proj_pred(node), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 4550;
		goto done;
	}
	// ia_load32 2 -> PROJ_0(load32(VAR_1, VAR_0))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Load(get_Proj_pred(node)) && (get_Load_mode(get_Proj_pred(node)) == mode_Is || get_Load_mode(get_Proj_pred(node)) == mode_Iu || get_Load_mode(get_Proj_pred(node)) == mode_P) && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(node), 0))) || var1 == get_irn_n(get_Proj_pred(node), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(node), 1))) || var0 == get_irn_n(get_Proj_pred(node), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 4551;
		goto done;
	}
	// ia_load32 -> load32(VAR_1, VAR_0)
	if (is_Load(node) && (get_Load_mode(node) == mode_Is || get_Load_mode(node) == mode_Iu || get_Load_mode(node) == mode_P) && ((var1 == NULL && (var1 = get_irn_n(node, 0))) || var1 == get_irn_n(node, 0)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Load(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), noreg_GP, is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_ls_mode(new_node, get_Load_mode(node));
		*rule = 4552;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	var3 = NULL;
	// ia_shlmem32_index 2 -> PROJ_0(store32(PROJ_0(load32(VAR_2, add32(VAR_0, VAR_1))), add32(VAR_0, VAR_1), shl32(PROJ_1(load32(VAR_2, add32(VAR_0, VAR_1))), VAR_3)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1)) && is_Shl(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1)) && ((var3 == NULL && (var3 = get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) || var3 == get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 4560;
		goto done;
	}
	// ia_shlmem32_index -> store32(PROJ_0(load32(VAR_2, add32(VAR_0, VAR_1))), add32(VAR_0, VAR_1), shl32(PROJ_1(load32(VAR_2, add32(VAR_0, VAR_1))), VAR_3))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 1))) || var1 == get_irn_n(get_irn_n(node, 1), 1)) && is_Shl(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Proj(get_irn_n(get_irn_n(node, 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1)) && ((var3 == NULL && (var3 = get_irn_n(get_irn_n(node, 2), 1))) || var3 == get_irn_n(get_irn_n(node, 2), 1))) {
		new_node = new_bd_ia32_ShlMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2), is_ia32_Immediate(var3) ? var3 : be_transform_node(var3)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 4561;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	var3 = NULL;
	// ia_shlmem32_index 2 -> PROJ_0(store32(PROJ_0(load32(VAR_2, add32(VAR_1, VAR_0))), add32(VAR_1, VAR_0), shl32(PROJ_1(load32(VAR_2, add32(VAR_1, VAR_0))), VAR_3)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1)) && is_Shl(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1)) && ((var3 == NULL && (var3 = get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) || var3 == get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 4570;
		goto done;
	}
	// ia_shlmem32_index -> store32(PROJ_0(load32(VAR_2, add32(VAR_1, VAR_0))), add32(VAR_1, VAR_0), shl32(PROJ_1(load32(VAR_2, add32(VAR_1, VAR_0))), VAR_3))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 0))) || var1 == get_irn_n(get_irn_n(node, 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 1))) || var0 == get_irn_n(get_irn_n(node, 1), 1)) && is_Shl(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Proj(get_irn_n(get_irn_n(node, 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1)) && ((var3 == NULL && (var3 = get_irn_n(get_irn_n(node, 2), 1))) || var3 == get_irn_n(get_irn_n(node, 2), 1))) {
		new_node = new_bd_ia32_ShlMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2), is_ia32_Immediate(var3) ? var3 : be_transform_node(var3)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 4571;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	var3 = NULL;
	// ia_shrmem32_index 2 -> PROJ_0(store32(PROJ_0(load32(VAR_2, add32(VAR_0, VAR_1))), add32(VAR_0, VAR_1), shr32(PROJ_1(load32(VAR_2, add32(VAR_0, VAR_1))), VAR_3)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1)) && is_Shr(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1)) && ((var3 == NULL && (var3 = get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) || var3 == get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 4580;
		goto done;
	}
	// ia_shrmem32_index -> store32(PROJ_0(load32(VAR_2, add32(VAR_0, VAR_1))), add32(VAR_0, VAR_1), shr32(PROJ_1(load32(VAR_2, add32(VAR_0, VAR_1))), VAR_3))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 1))) || var1 == get_irn_n(get_irn_n(node, 1), 1)) && is_Shr(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Proj(get_irn_n(get_irn_n(node, 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1)) && ((var3 == NULL && (var3 = get_irn_n(get_irn_n(node, 2), 1))) || var3 == get_irn_n(get_irn_n(node, 2), 1))) {
		new_node = new_bd_ia32_ShrMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2), is_ia32_Immediate(var3) ? var3 : be_transform_node(var3)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 4581;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	var3 = NULL;
	// ia_shrmem32_index 2 -> PROJ_0(store32(PROJ_0(load32(VAR_2, add32(VAR_1, VAR_0))), add32(VAR_1, VAR_0), shr32(PROJ_1(load32(VAR_2, add32(VAR_1, VAR_0))), VAR_3)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1)) && is_Shr(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1)) && ((var3 == NULL && (var3 = get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) || var3 == get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 4590;
		goto done;
	}
	// ia_shrmem32_index -> store32(PROJ_0(load32(VAR_2, add32(VAR_1, VAR_0))), add32(VAR_1, VAR_0), shr32(PROJ_1(load32(VAR_2, add32(VAR_1, VAR_0))), VAR_3))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 0))) || var1 == get_irn_n(get_irn_n(node, 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 1))) || var0 == get_irn_n(get_irn_n(node, 1), 1)) && is_Shr(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Proj(get_irn_n(get_irn_n(node, 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1)) && ((var3 == NULL && (var3 = get_irn_n(get_irn_n(node, 2), 1))) || var3 == get_irn_n(get_irn_n(node, 2), 1))) {
		new_node = new_bd_ia32_ShrMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2), is_ia32_Immediate(var3) ? var3 : be_transform_node(var3)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 4591;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	var3 = NULL;
	// ia_sarmem32_index 2 -> PROJ_0(store32(PROJ_0(load32(VAR_2, add32(VAR_1, VAR_0))), add32(VAR_1, VAR_0), shrs32(PROJ_1(load32(VAR_2, add32(VAR_1, VAR_0))), VAR_3)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1)) && is_Shrs(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1)) && ((var3 == NULL && (var3 = get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) || var3 == get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 4600;
		goto done;
	}
	// ia_sarmem32_index -> store32(PROJ_0(load32(VAR_2, add32(VAR_1, VAR_0))), add32(VAR_1, VAR_0), shrs32(PROJ_1(load32(VAR_2, add32(VAR_1, VAR_0))), VAR_3))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 0))) || var1 == get_irn_n(get_irn_n(node, 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 1))) || var0 == get_irn_n(get_irn_n(node, 1), 1)) && is_Shrs(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Proj(get_irn_n(get_irn_n(node, 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1)) && ((var3 == NULL && (var3 = get_irn_n(get_irn_n(node, 2), 1))) || var3 == get_irn_n(get_irn_n(node, 2), 1))) {
		new_node = new_bd_ia32_SarMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2), is_ia32_Immediate(var3) ? var3 : be_transform_node(var3)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 4601;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	var3 = NULL;
	// ia_sarmem32_index 2 -> PROJ_0(store32(PROJ_0(load32(VAR_2, add32(VAR_0, VAR_1))), add32(VAR_0, VAR_1), shrs32(PROJ_1(load32(VAR_2, add32(VAR_0, VAR_1))), VAR_3)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1), 1)) && is_Add(get_irn_n(get_Proj_pred(node), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1)) && is_Shrs(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1), 1)) && ((var3 == NULL && (var3 = get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) || var3 == get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 4610;
		goto done;
	}
	// ia_sarmem32_index -> store32(PROJ_0(load32(VAR_2, add32(VAR_0, VAR_1))), add32(VAR_0, VAR_1), shrs32(PROJ_1(load32(VAR_2, add32(VAR_0, VAR_1))), VAR_3))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1), 1)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 1))) || var1 == get_irn_n(get_irn_n(node, 1), 1)) && is_Shrs(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Proj(get_irn_n(get_irn_n(node, 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == 2 && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0))) || var2 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0)) && is_Add(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) == 2 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1), 1)) && ((var3 == NULL && (var3 = get_irn_n(get_irn_n(node, 2), 1))) || var3 == get_irn_n(get_irn_n(node, 2), 1))) {
		new_node = new_bd_ia32_SarMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2), is_ia32_Immediate(var3) ? var3 : be_transform_node(var3)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 4611;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	var3 = NULL;
	// ia_store32_index 0 -> PROJ_0(store32(VAR_2, add32(VAR_0, VAR_1), VAR_3))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(node), 0))) || var2 == get_irn_n(get_Proj_pred(node), 0)) && is_Add(get_irn_n(get_Proj_pred(node), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1)) && ((var3 == NULL && (var3 = get_irn_n(get_Proj_pred(node), 2))) || var3 == get_irn_n(get_Proj_pred(node), 2))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 4620;
		goto done;
	}
	// ia_store32_index -> store32(VAR_2, add32(VAR_0, VAR_1), VAR_3)
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && ((var2 == NULL && (var2 = get_irn_n(node, 0))) || var2 == get_irn_n(node, 0)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 1))) || var1 == get_irn_n(get_irn_n(node, 1), 1)) && ((var3 == NULL && (var3 = get_irn_n(node, 2))) || var3 == get_irn_n(node, 2))) {
		new_node = new_bd_ia32_Store(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2), is_ia32_Immediate(var3) ? var3 : be_transform_node(var3)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 4621;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	var3 = NULL;
	// ia_store32_index 0 -> PROJ_0(store32(VAR_2, add32(VAR_1, VAR_0), VAR_3))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(node), 0))) || var2 == get_irn_n(get_Proj_pred(node), 0)) && is_Add(get_irn_n(get_Proj_pred(node), 1)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0))) || var1 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1))) || var0 == get_irn_n(get_irn_n(get_Proj_pred(node), 1), 1)) && ((var3 == NULL && (var3 = get_irn_n(get_Proj_pred(node), 2))) || var3 == get_irn_n(get_Proj_pred(node), 2))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 4630;
		goto done;
	}
	// ia_store32_index -> store32(VAR_2, add32(VAR_1, VAR_0), VAR_3)
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && ((var2 == NULL && (var2 = get_irn_n(node, 0))) || var2 == get_irn_n(node, 0)) && is_Add(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && ((var1 == NULL && (var1 = get_irn_n(get_irn_n(node, 1), 0))) || var1 == get_irn_n(get_irn_n(node, 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 1))) || var0 == get_irn_n(get_irn_n(node, 1), 1)) && ((var3 == NULL && (var3 = get_irn_n(node, 2))) || var3 == get_irn_n(node, 2))) {
		new_node = new_bd_ia32_Store(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2), is_ia32_Immediate(var3) ? var3 : be_transform_node(var3)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 4631;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	// ia_shlmem32 2 -> PROJ_0(store32(PROJ_0(load32(VAR_1, VAR_0)), VAR_0, shl32(PROJ_1(load32(VAR_1, VAR_0)), VAR_2)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(node), 1))) || var0 == get_irn_n(get_Proj_pred(node), 1)) && is_Shl(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) && ((var2 == NULL && (var2 = get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) || var2 == get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 4640;
		goto done;
	}
	// ia_shlmem32 -> store32(PROJ_0(load32(VAR_1, VAR_0)), VAR_0, shl32(PROJ_1(load32(VAR_1, VAR_0)), VAR_2))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1)) && is_Shl(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Proj(get_irn_n(get_irn_n(node, 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) && ((var2 == NULL && (var2 = get_irn_n(get_irn_n(node, 2), 1))) || var2 == get_irn_n(get_irn_n(node, 2), 1))) {
		new_node = new_bd_ia32_ShlMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), noreg_GP, is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 4641;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	// ia_shrmem32 2 -> PROJ_0(store32(PROJ_0(load32(VAR_1, VAR_0)), VAR_0, shr32(PROJ_1(load32(VAR_1, VAR_0)), VAR_2)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(node), 1))) || var0 == get_irn_n(get_Proj_pred(node), 1)) && is_Shr(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) && ((var2 == NULL && (var2 = get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) || var2 == get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 4650;
		goto done;
	}
	// ia_shrmem32 -> store32(PROJ_0(load32(VAR_1, VAR_0)), VAR_0, shr32(PROJ_1(load32(VAR_1, VAR_0)), VAR_2))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1)) && is_Shr(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Proj(get_irn_n(get_irn_n(node, 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) && ((var2 == NULL && (var2 = get_irn_n(get_irn_n(node, 2), 1))) || var2 == get_irn_n(get_irn_n(node, 2), 1))) {
		new_node = new_bd_ia32_ShrMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), noreg_GP, is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 4651;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	// ia_sarmem32 2 -> PROJ_0(store32(PROJ_0(load32(VAR_1, VAR_0)), VAR_0, shrs32(PROJ_1(load32(VAR_1, VAR_0)), VAR_2)))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && is_Proj(get_irn_n(get_Proj_pred(node), 0)) && get_Proj_num(get_irn_n(get_Proj_pred(node), 0)) == 0 && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_Proj_pred(node), 0)), 1)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(node), 1))) || var0 == get_irn_n(get_Proj_pred(node), 1)) && is_Shrs(get_irn_n(get_Proj_pred(node), 2)) && (get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Is || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_Iu || get_irn_mode(get_irn_n(get_Proj_pred(node), 2)) == mode_P) && get_irn_n_edges(get_irn_n(get_Proj_pred(node), 2)) == 1 && is_Proj(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(get_Proj_pred(node), 2), 0)), 1)) && ((var2 == NULL && (var2 = get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) || var2 == get_irn_n(get_irn_n(get_Proj_pred(node), 2), 1))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 2);
		*rule = 4660;
		goto done;
	}
	// ia_sarmem32 -> store32(PROJ_0(load32(VAR_1, VAR_0)), VAR_0, shrs32(PROJ_1(load32(VAR_1, VAR_0)), VAR_2))
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && is_Proj(get_irn_n(node, 0)) && get_Proj_num(get_irn_n(node, 0)) == 0 && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(node, 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(node, 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(node, 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(node, 0)), 1)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1)) && is_Shrs(get_irn_n(node, 2)) && (get_irn_mode(get_irn_n(node, 2)) == mode_Is || get_irn_mode(get_irn_n(node, 2)) == mode_Iu || get_irn_mode(get_irn_n(node, 2)) == mode_P) && get_irn_n_edges(get_irn_n(node, 2)) == 1 && is_Proj(get_irn_n(get_irn_n(node, 2), 0)) && get_Proj_num(get_irn_n(get_irn_n(node, 2), 0)) == 1 && get_irn_n_edges(get_irn_n(get_irn_n(node, 2), 0)) == 1 && is_Load(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) && (get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Is || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_Iu || get_Load_mode(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == mode_P) && get_irn_n_edges(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0))) == 2 && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0))) || var1 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1))) || var0 == get_irn_n(get_Proj_pred(get_irn_n(get_irn_n(node, 2), 0)), 1)) && ((var2 == NULL && (var2 = get_irn_n(get_irn_n(node, 2), 1))) || var2 == get_irn_n(get_irn_n(node, 2), 1))) {
		new_node = new_bd_ia32_SarMem(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), noreg_GP, is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 4661;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	var2 = NULL;
	// ia_store32 0 -> PROJ_0(store32(VAR_1, VAR_0, VAR_2))
	if (is_Proj(node) && get_Proj_num(node) == 0 && is_Store(get_Proj_pred(node)) && (get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Is || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_Iu || get_irn_mode(get_Store_value(get_Proj_pred(node))) == mode_P) && ((var1 == NULL && (var1 = get_irn_n(get_Proj_pred(node), 0))) || var1 == get_irn_n(get_Proj_pred(node), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_Proj_pred(node), 1))) || var0 == get_irn_n(get_Proj_pred(node), 1)) && ((var2 == NULL && (var2 = get_irn_n(get_Proj_pred(node), 2))) || var2 == get_irn_n(get_Proj_pred(node), 2))) {
		new_node = be_transform_node(get_Proj_pred(node));
		new_node = be_new_Proj(new_node, 0);
		*rule = 4670;
		goto done;
	}
	// ia_store32 -> store32(VAR_1, VAR_0, VAR_2)
	if (is_Store(node) && (get_irn_mode(get_Store_value(node)) == mode_Is || get_irn_mode(get_Store_value(node)) == mode_Iu || get_irn_mode(get_Store_value(node)) == mode_P) && ((var1 == NULL && (var1 = get_irn_n(node, 0))) || var1 == get_irn_n(node, 0)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1)) && ((var2 == NULL && (var2 = get_irn_n(node, 2))) || var2 == get_irn_n(node, 2))) {
		new_node = new_bd_ia32_Store(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), noreg_GP, is_ia32_Immediate(var1) ? var1 : be_transform_node(var1), is_ia32_Immediate(var2) ? var2 : be_transform_node(var2)); set_ia32_ls_mode(new_node, get_irn_mode(get_Store_value(node)));
		*rule = 4671;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_lea32_imm -1 -> add32(VAR_0, IMM_1)
	if (is_Add(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && x86_match_immediate(&tmp_imm, get_irn_n(node, 1), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm))) {
		new_node = new_bd_ia32_Lea(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), noreg_GP); get_ia32_attr(new_node)->am_imm = get_ia32_immediate_attr(is_ia32_Immediate(var1) ? var1 : be_transform_node(var1))->imm; set_ia32_commutative(new_node);
		*rule = 4680;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_lea32_imm -1 -> add32(IMM_1, VAR_0)
	if (is_Add(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && x86_match_immediate(&tmp_imm, get_irn_n(node, 0), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Lea(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), noreg_GP); get_ia32_attr(new_node)->am_imm = get_ia32_immediate_attr(is_ia32_Immediate(var1) ? var1 : be_transform_node(var1))->imm; set_ia32_commutative(new_node);
		*rule = 4690;
		goto done;
	}
	var0 = NULL;
	// ia_blsr32 -1 -> add32(or32(VAR_0, minus32(VAR_0)), VAR_0)
	if (is_Add(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Or(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 0))) || var0 == get_irn_n(get_irn_n(node, 0), 0)) && is_Minus(get_irn_n(get_irn_n(node, 0), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 1), 0)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Blsr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 4700;
		goto done;
	}
	var0 = NULL;
	// ia_blsr32 -1 -> add32(or32(minus32(VAR_0), VAR_0), VAR_0)
	if (is_Add(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && is_Or(get_irn_n(node, 0)) && (get_irn_mode(get_irn_n(node, 0)) == mode_Is || get_irn_mode(get_irn_n(node, 0)) == mode_Iu || get_irn_mode(get_irn_n(node, 0)) == mode_P) && get_irn_n_edges(get_irn_n(node, 0)) == 1 && is_Minus(get_irn_n(get_irn_n(node, 0), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 0), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 0), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 0), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 0), 1))) || var0 == get_irn_n(get_irn_n(node, 0), 1)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Blsr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 4710;
		goto done;
	}
	var0 = NULL;
	// ia_blsr32 -1 -> add32(VAR_0, or32(minus32(VAR_0), VAR_0))
	if (is_Add(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && is_Or(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && is_Minus(get_irn_n(get_irn_n(node, 1), 0)) && (get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 1), 0)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 0)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 1), 0), 0)) && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 1))) || var0 == get_irn_n(get_irn_n(node, 1), 1))) {
		new_node = new_bd_ia32_Blsr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 4720;
		goto done;
	}
	var0 = NULL;
	// ia_blsr32 -1 -> add32(VAR_0, or32(VAR_0, minus32(VAR_0)))
	if (is_Add(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && is_Or(get_irn_n(node, 1)) && (get_irn_mode(get_irn_n(node, 1)) == mode_Is || get_irn_mode(get_irn_n(node, 1)) == mode_Iu || get_irn_mode(get_irn_n(node, 1)) == mode_P) && get_irn_n_edges(get_irn_n(node, 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(node, 1), 0))) || var0 == get_irn_n(get_irn_n(node, 1), 0)) && is_Minus(get_irn_n(get_irn_n(node, 1), 1)) && (get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_Is || get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_Iu || get_irn_mode(get_irn_n(get_irn_n(node, 1), 1)) == mode_P) && get_irn_n_edges(get_irn_n(get_irn_n(node, 1), 1)) == 1 && ((var0 == NULL && (var0 = get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0))) || var0 == get_irn_n(get_irn_n(get_irn_n(node, 1), 1), 0))) {
		new_node = new_bd_ia32_Blsr(dbgi, block, noreg_GP, noreg_GP, nomem, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0)); set_ia32_ls_mode(new_node, get_irn_mode(node));
		*rule = 4730;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_lea32 -1 -> add32(VAR_1, VAR_0)
	if (is_Add(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var1 == NULL && (var1 = get_irn_n(node, 0))) || var1 == get_irn_n(node, 0)) && ((var0 == NULL && (var0 = get_irn_n(node, 1))) || var0 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Lea(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_commutative(new_node);
		*rule = 4740;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_lea32 -1 -> add32(VAR_0, VAR_1)
	if (is_Add(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && ((var1 == NULL && (var1 = get_irn_n(node, 1))) || var1 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Lea(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1)); set_ia32_commutative(new_node);
		*rule = 4750;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_shl32_imm -1 -> shl32(VAR_0, IMM_1)
	if (is_Shl(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && x86_match_immediate(&tmp_imm, get_irn_n(node, 1), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm))) {
		new_node = new_bd_ia32_Shl(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1));
		*rule = 4760;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_shl32 -1 -> shl32(VAR_0, VAR_1)
	if (is_Shl(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && ((var1 == NULL && (var1 = get_irn_n(node, 1))) || var1 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Shl(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1));
		*rule = 4770;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_shr32_imm -1 -> shr32(VAR_0, IMM_1)
	if (is_Shr(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && x86_match_immediate(&tmp_imm, get_irn_n(node, 1), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm))) {
		new_node = new_bd_ia32_Shr(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1));
		*rule = 4780;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_shr32 -1 -> shr32(VAR_0, VAR_1)
	if (is_Shr(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && ((var1 == NULL && (var1 = get_irn_n(node, 1))) || var1 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Shr(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1));
		*rule = 4790;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_sar32_imm -1 -> shrs32(VAR_0, IMM_1)
	if (is_Shrs(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && x86_match_immediate(&tmp_imm, get_irn_n(node, 1), 'g') && ((var1 == NULL && (var1 = ia32_create_Immediate_full(get_irn_irg(block), &tmp_imm))) || x86_imm32_equal(&get_ia32_immediate_attr(var1)->imm, &tmp_imm))) {
		new_node = new_bd_ia32_Sar(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1));
		*rule = 4800;
		goto done;
	}
	var0 = NULL;
	var1 = NULL;
	// ia_sar32 -1 -> shrs32(VAR_0, VAR_1)
	if (is_Shrs(node) && (get_irn_mode(node) == mode_Is || get_irn_mode(node) == mode_Iu || get_irn_mode(node) == mode_P) && ((var0 == NULL && (var0 = get_irn_n(node, 0))) || var0 == get_irn_n(node, 0)) && ((var1 == NULL && (var1 = get_irn_n(node, 1))) || var1 == get_irn_n(node, 1))) {
		new_node = new_bd_ia32_Sar(dbgi, block, is_ia32_Immediate(var0) ? var0 : be_transform_node(var0), is_ia32_Immediate(var1) ? var1 : be_transform_node(var1));
		*rule = 4810;
		goto done;
	}
done:
	return new_node;
}
